{
  "version": 3,
  "sources": ["../../../../node_modules/perf-monitor/dist/es5/perf-monitor.js", "../../../../packages/runtime/dist/context-82e99b73.js", "../../../../packages/runtime/dist/internal.js", "../../../src/dbmonster/App.velvet", "../../../src/dbmonster/index.js"],
  "sourcesContent": ["var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n", "let _Object = Object;\nlet _Symbol = Symbol;\nlet RE_HYPHENATE = /\\B([A-Z])/g;\nlet noop = () => {\n};\nfunction hyphenate(str) {\n  return str.replace(RE_HYPHENATE, \"-$1\").toLowerCase();\n}\nlet is = /* @__PURE__ */ _Object.is.bind(_Object);\nlet assign = /* @__PURE__ */ _Object.assign.bind(_Object);\nlet is_function = (x) => typeof x === \"function\";\nfunction to_number(value) {\n  return value === \"\" ? null : +value;\n}\nlet undefined$1;\nlet RUNNING = 1 << 0;\nlet NOTIFIED = 1 << 1;\nlet OUTDATED = 1 << 2;\nlet DISPOSED = 1 << 3;\nlet HAS_ERROR = 1 << 4;\nlet TRACKING = 1 << 5;\nlet depth_sort = (a, b) => a.e - b.e;\nlet eval_scope;\nlet eval_context;\nlet eval_sources;\nlet eval_sources_idx = 0;\nlet batched_effects;\nlet batch_depth = 0;\nlet batch_iteration = 0;\nlet clock = 0;\nlet access_clock = 0;\nfunction start_batch() {\n  batch_depth++;\n}\nfunction end_batch() {\n  if (batch_depth > 1) {\n    batch_depth--;\n    return;\n  }\n  let error;\n  let has_error = false;\n  while (batched_effects) {\n    let effects = batched_effects.sort(depth_sort);\n    let idx = 0;\n    let len = effects.length;\n    batched_effects = undefined$1;\n    batch_iteration++;\n    for (; idx < len; idx++) {\n      let effect2 = effects[idx];\n      effect2.a &= ~NOTIFIED;\n      if (!(effect2.a & DISPOSED) && need_recompute(effect2)) {\n        try {\n          effect2.f();\n        } catch (err) {\n          if (!has_error) {\n            error = err;\n            has_error = true;\n          }\n        }\n      }\n    }\n  }\n  batch_iteration = 0;\n  batch_depth--;\n  if (has_error) {\n    throw error;\n  }\n}\nfunction need_recompute(target) {\n  let sources = target.b;\n  let len = sources.length;\n  let idx = 0;\n  let source;\n  for (; idx < len; idx++) {\n    source = sources[idx];\n    if (source.d > target.d || source.f()) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction cleanup_context() {\n  let sources = eval_context.b;\n  if (eval_sources) {\n    prune_context_sources();\n    if (eval_sources_idx > 0) {\n      let l = eval_sources.length;\n      let i = 0;\n      sources.length = eval_sources_idx + l;\n      for (; i < l; i++) {\n        sources[eval_sources_idx + i] = eval_sources[i];\n      }\n    } else {\n      sources = eval_context.b = eval_sources;\n    }\n    let len = sources.length;\n    let idx = eval_sources_idx;\n    for (; idx < len; idx++) {\n      let source = sources[idx];\n      if (eval_context.a & TRACKING) {\n        source.k(eval_context);\n      }\n    }\n  } else if (eval_sources_idx < eval_context.b.length) {\n    prune_context_sources();\n    sources.length = eval_sources_idx;\n  }\n}\nfunction prune_context_sources() {\n  let sources = eval_context.b;\n  let len = sources.length;\n  let idx = eval_sources_idx;\n  for (; idx < len; idx++) {\n    let source = sources[idx];\n    source.i(eval_context);\n  }\n}\nfunction dispose_effect(effect2) {\n  let sources = effect2.b;\n  let len = sources.length;\n  let idx = 0;\n  for (; idx < len; idx++) {\n    sources[idx].i(effect2);\n  }\n  sources.length = 0;\n}\nclass Signal {\n  /** @internal @type {number} */\n  d = -1;\n  /** @internal @type {number} */\n  g = -1;\n  /** @internal @type {Array<Computed | Effect>} */\n  h = [];\n  /** @internal @type {T} */\n  c;\n  /**\n   * @param {T} value\n   */\n  constructor(value) {\n    let _this = this;\n    _this.c = value;\n  }\n  /**\n   * @internal\n   * @returns {boolean}\n   */\n  f() {\n    return false;\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  k(target) {\n    let _this = this;\n    _this.h.push(target);\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  i(target) {\n    let _this = this;\n    let targets = _this.h;\n    let idx = targets.indexOf(target);\n    targets.splice(idx, 1);\n  }\n  /**\n   * @returns {T}\n   */\n  peek() {\n    let _this = this;\n    return _this.c;\n  }\n  /** @type {T} */\n  get value() {\n    let _this = this;\n    if (eval_context && eval_context.g !== _this.g) {\n      _this.g = eval_context.g;\n      if (!eval_sources) {\n        if (eval_context.b[eval_sources_idx] === _this) {\n          eval_sources_idx++;\n        } else {\n          eval_sources = [_this];\n        }\n      } else {\n        eval_sources.push(_this);\n      }\n    }\n    return _this.c;\n  }\n  set value(next) {\n    let _this = this;\n    if (_this.c !== next) {\n      _this.c = next;\n      _this.d = ++clock;\n      if (batch_iteration < 100) {\n        let targets = _this.h;\n        let len = targets.length;\n        let idx = 0;\n        start_batch();\n        for (; idx < len; idx++) {\n          targets[idx].l();\n        }\n        end_batch();\n      }\n    }\n  }\n}\nclass Computed extends Signal {\n  /** @internal @type {Array<Signal>} */\n  b = [];\n  /** @internal @type {number} */\n  a = OUTDATED;\n  /** @internal @type {number} */\n  m = -1;\n  /** @internal @type {() => T} */\n  j;\n  /**\n   * @param {() => T} compute\n   */\n  constructor(compute) {\n    super();\n    let _this = this;\n    _this.j = compute;\n  }\n  /**\n   * @internal\n   * @returns {boolean}\n   */\n  f() {\n    let _this = this;\n    let flags = _this.a &= ~NOTIFIED;\n    if (flags & RUNNING || (flags & TRACKING ? !(flags & OUTDATED) : _this.m === clock)) {\n      return false;\n    }\n    _this.a = flags & ~OUTDATED | RUNNING;\n    _this.m = clock;\n    if (_this.d > -1 && !need_recompute(_this)) {\n      _this.a &= ~RUNNING;\n      return false;\n    }\n    let stale = false;\n    let prev_context = eval_context;\n    let prev_sources = eval_sources;\n    let prev_sources_idx = eval_sources_idx;\n    let value;\n    try {\n      eval_context = _this;\n      eval_sources = undefined$1;\n      eval_sources_idx = 0;\n      value = _this.j();\n      if (flags & HAS_ERROR || _this.c !== value || _this.d === -1) {\n        stale = true;\n        _this.c = value;\n        _this.a &= ~HAS_ERROR;\n        _this.d = ++clock;\n      }\n    } catch (err) {\n      stale = true;\n      _this.c = err;\n      _this.a |= HAS_ERROR;\n      _this.d = ++clock;\n    }\n    cleanup_context();\n    eval_context = prev_context;\n    eval_sources = prev_sources;\n    eval_sources_idx = prev_sources_idx;\n    _this.a &= ~RUNNING;\n    return stale;\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  k(target) {\n    let _this = this;\n    if (_this.h.length < 1) {\n      let sources = _this.b;\n      let len = sources.length;\n      let idx = 0;\n      _this.a |= TRACKING;\n      for (; idx < len; idx++) {\n        sources[idx].k(_this);\n      }\n    }\n    super.k(target);\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  i(target) {\n    let _this = this;\n    super.i(target);\n    if (_this.h.length < 1) {\n      let sources = _this.b;\n      let len = sources.length;\n      let idx = 0;\n      _this.a &= ~TRACKING;\n      for (; idx < len; idx++) {\n        sources[idx].i(_this);\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  l() {\n    let _this = this;\n    if (!(_this.a & (NOTIFIED | RUNNING))) {\n      let targets = _this.h;\n      let len = targets.length;\n      let idx = 0;\n      _this.a |= OUTDATED | NOTIFIED;\n      for (; idx < len; idx++) {\n        targets[idx].l();\n      }\n    }\n  }\n  peek() {\n    let _this = this;\n    _this.f();\n    if (_this.a & HAS_ERROR) {\n      throw _this.c;\n    }\n    return _this.c;\n  }\n  get value() {\n    let _this = this;\n    _this.f();\n    if (_this.a & HAS_ERROR) {\n      throw super.value;\n    }\n    return super.value;\n  }\n  set value(next) {\n    super.value = next;\n  }\n}\nclass Effect {\n  /** @internal @type {number} */\n  d = 0;\n  /** @internal @type {number} */\n  g = 0;\n  /** @internal @type {Array<Signal>} */\n  b = [];\n  /** @internal @type {number} */\n  a = TRACKING;\n  /** @internal @type {number} */\n  e = 0;\n  /** @internal @type {() => void} */\n  j;\n  /**\n   * @param {() => void} compute\n   */\n  constructor(compute) {\n    let _this = this;\n    _this.j = compute;\n  }\n  /**\n   * @internal\n   */\n  f() {\n    let _this = this;\n    let flags = _this.a;\n    if (flags & RUNNING) {\n      return;\n    }\n    _this.d = clock;\n    _this.g = access_clock++;\n    _this.a = flags & ~OUTDATED | RUNNING;\n    let prev_context = eval_context;\n    let prev_sources = eval_sources;\n    let prev_sources_idx = eval_sources_idx;\n    try {\n      start_batch();\n      eval_context = _this;\n      eval_sources = undefined$1;\n      eval_sources_idx = 0;\n      _this.j();\n    } finally {\n      cleanup_context();\n      eval_context = prev_context;\n      eval_sources = prev_sources;\n      eval_sources_idx = prev_sources_idx;\n      _this.a &= ~RUNNING;\n      if (_this.a & DISPOSED) {\n        dispose_effect(_this);\n      }\n      end_batch();\n    }\n  }\n  /**\n   * @internal\n   */\n  l() {\n    let _this = this;\n    if (!(_this.a & (NOTIFIED | RUNNING))) {\n      _this.a |= OUTDATED | NOTIFIED;\n      (batched_effects ||= []).push(_this);\n    }\n  }\n  /**\n   * @internal\n   */\n  n() {\n    let _this = this;\n    _this.a |= DISPOSED;\n    if (!(_this.a & RUNNING)) {\n      dispose_effect(_this);\n    }\n  }\n}\nclass Scope {\n  /**\n   * @param {boolean} [detached]\n   */\n  constructor(detached) {\n    let _this = this;\n    _this.scopes = [];\n    _this.cleanups = [];\n    _this.parent = undefined$1;\n    _this.e = 0;\n    if (!detached && eval_scope) {\n      _this.parent = eval_scope;\n      _this.e = eval_scope.e + 1;\n      eval_scope.scopes.push(_this);\n    }\n  }\n  /**\n   * @template {T}\n   * @param {() => T} callback\n   * @returns {T}\n   */\n  run(callback) {\n    let prev_scope = eval_scope;\n    try {\n      eval_scope = this;\n      return callback();\n    } finally {\n      eval_scope = prev_scope;\n    }\n  }\n  clear() {\n    let _this = this;\n    let scopes = _this.scopes;\n    let cleanups = _this.cleanups;\n    for (let scope2 of scopes) {\n      scope2.clear();\n      scope2.parent = undefined$1;\n    }\n    for (let cleanup2 of cleanups) {\n      cleanup2();\n    }\n    scopes.length = 0;\n    cleanups.length = 0;\n  }\n}\nfunction scope(detached) {\n  return new Scope(detached);\n}\nfunction cleanup(callback) {\n  if (is_function(callback) && eval_scope) {\n    eval_scope.cleanups.push(callback);\n  }\n}\nfunction batch(callback) {\n  if (batch_depth > 0) {\n    return callback();\n  }\n  start_batch();\n  try {\n    return callback();\n  } finally {\n    end_batch();\n  }\n}\nfunction untrack(callback) {\n  let prev_context = eval_context;\n  try {\n    eval_context = undefined$1;\n    return callback();\n  } finally {\n    eval_context = prev_context;\n  }\n}\nfunction peek(value) {\n  if (value instanceof Signal) {\n    return value.peek();\n  }\n  return value;\n}\nfunction signal(value) {\n  return new Signal(value);\n}\nfunction computed(compute) {\n  return new Computed(compute);\n}\nfunction effect(compute) {\n  let effect2 = new Effect(compute);\n  let dispose = effect2.n.bind(effect2);\n  try {\n    effect2.f();\n  } catch (error) {\n    dispose();\n    throw error;\n  }\n  if (eval_scope && effect2.b.length > 0) {\n    effect2.e = eval_scope.e;\n    eval_scope.cleanups.push(dispose);\n  }\n  return dispose;\n}\nlet ENABLE_RANDOM_TAGS = false;\nlet RANDOM_TAG = 1;\nfunction use_random_tags() {\n  ENABLE_RANDOM_TAGS = true;\n}\nlet curr_host = null;\nlet default_value = _Symbol();\nclass VelvetComponent extends HTMLElement {\n  // static $c: setup function\n  // static $a: attr to prop definition\n  // static $d: prop definitions\n  // static $s: stylesheets\n  /** is mounted */\n  $m = false;\n  /** scope instance */\n  $c = scope(true);\n  /** @type {Record<number, Signal>} props */\n  $p = {};\n  /** on mount hooks */\n  $h = [];\n  constructor() {\n    super();\n    let host = this;\n    let props = host.$p;\n    let definition = host.constructor.$d;\n    for (let prop2 in definition) {\n      let index = definition[prop2];\n      props[index] = signal(default_value);\n    }\n  }\n  connectedCallback() {\n    let host = this;\n    if (!host.$m) {\n      host.$m = true;\n      let setup = host.constructor.$c;\n      let styles = host.constructor.$s;\n      let instance = host.$c;\n      let hooks = host.$h;\n      let root = host.shadowRoot;\n      if (!root) {\n        root = host.attachShadow({ mode: \"open\" });\n        root.adoptedStyleSheets = styles;\n      }\n      let prev_host = curr_host;\n      try {\n        curr_host = host;\n        instance.run(() => setup(root, host));\n        for (let idx = 0, len = hooks.length; idx < len; idx++) {\n          let hook = hooks[idx];\n          let ret = hook();\n          if (is_function(ret)) {\n            instance.cleanups.push(ret);\n          }\n        }\n        hooks.length = 0;\n      } finally {\n        curr_host = prev_host;\n      }\n    }\n  }\n  disconnectedCallback() {\n    let host = this;\n    if (host.$m) {\n      host.$c.clear();\n      host.shadowRoot.innerHTML = \"\";\n      host.$m = false;\n    }\n  }\n  attributeChangedCallback(attr2, prev, next) {\n    let host = this;\n    let mapping = host.constructor.$d;\n    if (attr2 in mapping) {\n      host.$p[mapping[attr2]].value = next === \"\" ? true : next;\n    }\n  }\n}\nfunction define(tag, setup, definition, styles) {\n  let observed_attrs = [];\n  let attr_to_prop = _Object.create(null);\n  class Component extends VelvetComponent {\n    static observedAttributes = observed_attrs;\n    static $c = setup;\n    static $a = attr_to_prop;\n    static $d = definition;\n    static $s = styles;\n  }\n  for (let prop2 in definition) {\n    let index = definition[prop2];\n    let hyphen = hyphenate(prop2);\n    attr_to_prop[hyphen] = prop2;\n    observed_attrs.push(hyphen);\n    _Object.defineProperty(Component.prototype, prop2, {\n      /** @this VelvetComponent */\n      get() {\n        return this.$p[index].c;\n      },\n      /** @this VelvetComponent */\n      set(next) {\n        this.$p[index].value = next;\n      }\n    });\n  }\n  if (ENABLE_RANDOM_TAGS) {\n    tag = \"velvet-\" + RANDOM_TAG++;\n  }\n  if (tag) {\n    customElements.define(tag, Component);\n  }\n  return Component;\n}\nfunction css(text) {\n  const style = new CSSStyleSheet();\n  style.replaceSync(text);\n  return style;\n}\nfunction prop(index, value) {\n  let state = curr_host.$p[index];\n  if (state.value === default_value) {\n    state.value = is_function(value) ? value() : value;\n  }\n  return state;\n}\nfunction on_mount(fn) {\n  if (is_function(fn)) {\n    curr_host.$h.push(fn);\n  }\n}\nfunction event_dispatcher() {\n  let host = curr_host;\n  return (type, detail) => {\n    let event = new CustomEvent(type, { detail, bubbles: false });\n    host.dispatchEvent(event);\n  };\n}\nfunction bind(obj) {\n  assign(curr_host, obj);\n}\nfunction use(node, action, getter) {\n  let ref = getter && computed(getter);\n  let instance = action(node, ref && ref.value);\n  if (!instance) {\n    return;\n  }\n  if (is_function(instance.destroy)) {\n    cleanup(() => instance.destroy());\n  }\n  if (ref && ref.b && is_function(instance.update)) {\n    let init = false;\n    effect(() => {\n      let next = ref.value;\n      if (!init) {\n        init = true;\n        return;\n      }\n      instance.update(next);\n    });\n  }\n}\nfunction html(fragment, is_wrapped) {\n  let node = document.createElement(\"template\");\n  node.innerHTML = fragment;\n  if (is_wrapped) {\n    let content = node.content;\n    let wrapper = content.firstChild;\n    let child;\n    wrapper.remove();\n    while (child = wrapper.firstChild) {\n      content.appendChild(child);\n    }\n  }\n  return node;\n}\nfunction create(element) {\n  return document.createElement(element);\n}\nfunction clone(template) {\n  let fragment = document.importNode(template.content, true);\n  return fragment;\n}\n// @__NO_SIDE_EFFECTS__\nfunction first_child(node) {\n  return node.firstChild;\n}\n// @__NO_SIDE_EFFECTS__\nfunction next_sibling(node) {\n  return node.nextSibling;\n}\nfunction traverse(node, indices) {\n  let ref = node;\n  let i = 0;\n  let il = indices.length;\n  let x;\n  let j;\n  for (; i < il; i++) {\n    x = indices[i];\n    ref = ref.firstChild;\n    for (j = 0; j < x; j++) {\n      ref = ref.nextSibling;\n    }\n  }\n  return ref;\n}\nfunction replace(ref, node, adopt) {\n  ref.replaceWith(node);\n  if (adopt) {\n    let child;\n    while (child = ref.firstChild) {\n      node.appendChild(child);\n    }\n  }\n}\nfunction append(ref, node) {\n  ref.append(node);\n}\nfunction after(ref, node) {\n  ref.after(node);\n}\nfunction remove_parts(a, b) {\n  let node = a;\n  if (b.nextSibling === a) {\n    return;\n  }\n  while (node) {\n    let curr = node;\n    node = node.nextSibling;\n    curr.remove();\n    if (curr === b) {\n      break;\n    }\n  }\n}\nfunction on(node, type, listener, options) {\n  node.addEventListener(type, listener, options);\n}\nfunction toggle(node, name, value) {\n  node.toggleAttribute(name, value);\n}\nfunction attr(node, name, value) {\n  node.setAttribute(name, value);\n}\nfunction attr_ifdef(node, name, value) {\n  let map = node.$ifd || (node.$ifd = {});\n  let def = value != null;\n  if (def) {\n    attr(node, name, value);\n  } else if (map[name]) {\n    node.removeAttribute(name);\n  }\n  map[name] = def;\n}\nfunction class_toggle(node, name, value) {\n  node.classList.toggle(name, value);\n}\nfunction style_set(node, name, value) {\n  node.style.setProperty(name, value);\n}\nfunction get_checked_values(array, value, checked) {\n  let next = array.slice();\n  if (checked) {\n    next.push(value);\n    return next;\n  } else {\n    let index = array.indexOf(value);\n    if (index > -1) {\n      next.splice(index, 1);\n      return next;\n    }\n  }\n  return array;\n}\nfunction get_select_values(select) {\n  let multiple = select.multiple;\n  let array = [];\n  let selected = select.selectedOptions;\n  for (let i = 0, l = selected.length; i < l; i++) {\n    let option = selected[i];\n    array.push(option.value);\n  }\n  return multiple ? array : array[0];\n}\nfunction set_select_values(select, current) {\n  let multiple = select.multiple;\n  let options = select.options;\n  for (let i = 0, l = options.length; i < l; i++) {\n    let option = options[i];\n    let selected = multiple ? current.includes(option.value) : option.value === current;\n    option.selected = selected;\n    if (selected && !multiple) {\n      return;\n    }\n  }\n}\nlet event_name = \"context-request\";\nfunction provide(key, value) {\n  let listener = (event) => {\n    if (event.context === key) {\n      event.stopImmediatePropagation();\n      event.callback(value, null);\n    }\n  };\n  on(curr_host, event_name, listener);\n}\nfunction inject(key, def) {\n  let value = def;\n  let callback = (next, dispose) => {\n    dispose?.();\n    value = next;\n  };\n  let event = new ContextEvent(key, callback, false);\n  curr_host.dispatchEvent(event);\n  return value;\n}\nclass ContextEvent extends Event {\n  constructor(context, callback, multiple) {\n    super(event_name, { bubbles: true, composed: true });\n    this.context = context;\n    this.callback = callback;\n    this.multiple = multiple;\n  }\n}\nexport { create as A, clone as B, ContextEvent as C, first_child as D, next_sibling as E, traverse as F, append as G, after as H, on as I, toggle as J, attr as K, attr_ifdef as L, class_toggle as M, style_set as N, get_checked_values as O, get_select_values as P, set_select_values as Q, Computed as R, Scope as S, Effect as T, noop as U, VelvetComponent as V, hyphenate as W, assign as X, is_function as Y, to_number as Z, computed as a, batch as b, cleanup as c, effect as d, event_dispatcher as e, peek as f, Signal as g, signal as h, inject as i, untrack as j, eval_scope as k, replace as l, is as m, curr_host as n, on_mount as o, provide as p, default_value as q, remove_parts as r, scope as s, define as t, use_random_tags as u, css as v, prop as w, bind as x, use as y, html as z };\n", "import { d as effect, s as scope, k as eval_scope, h as signal, c as cleanup, r as remove_parts, b as batch, l as replace, m as is } from \"./context-82e99b73.js\";\nexport { R as Computed, C as ContextEvent, T as Effect, S as Scope, g as Signal, V as VelvetComponent, H as after, G as append, X as assign, K as attr, L as attr_ifdef, x as bind, M as class_toggle, B as clone, a as computed, A as create, v as css, n as curr_host, q as default_value, t as define, e as event_dispatcher, D as first_child, O as get_checked_values, P as get_select_values, z as html, W as hyphenate, i as inject, Y as is_function, E as next_sibling, U as noop, I as on, o as on_mount, f as peek, w as prop, p as provide, Q as set_select_values, N as style_set, Z as to_number, J as toggle, F as traverse, j as untrack, y as use, u as use_random_tags } from \"./context-82e99b73.js\";\nfunction reconcile_dom(parent, a2, b) {\n  let b_length = b.length;\n  let a_end = a2.length;\n  let b_end = b_length;\n  let a_start = 0;\n  let b_start = 0;\n  let after = a2[a_end - 1].nextSibling;\n  let map = null;\n  let node;\n  let idx;\n  while (a_start < a_end || b_start < b_end) {\n    if (a2[a_start] === b[b_start]) {\n      a_start++;\n      b_start++;\n      continue;\n    }\n    while (a2[a_end - 1] === b[b_end - 1]) {\n      a_end--;\n      b_end--;\n    }\n    if (a_end === a_start) {\n      node = b_end < b_length ? b_start ? b[b_start - 1].nextSibling : b[b_end - b_start] : after;\n      while (b_start < b_end) {\n        parent.insertBefore(b[b_start++], node);\n      }\n    } else if (b_end === b_start) {\n      while (a_start < a_end) {\n        if (!map || !map.has(a2[a_start])) {\n          a2[a_start].remove();\n        }\n        a_start++;\n      }\n    } else if (a2[a_start] === b[b_end - 1] && b[b_start] === a2[a_end - 1]) {\n      node = a2[--a_end].nextSibling;\n      parent.insertBefore(b[b_start++], a2[a_start++].nextSibling);\n      parent.insertBefore(b[--b_end], node);\n      a2[a_end] = b[b_end];\n    } else {\n      if (!map) {\n        map = /* @__PURE__ */ new Map();\n        let i2 = b_start;\n        while (i2 < b_end) {\n          map.set(b[i2], i2++);\n        }\n      }\n      idx = map.get(a2[a_start]);\n      if (idx != null) {\n        if (b_start < idx && idx < b_end) {\n          let i2 = a_start, sequence = 1, t2;\n          while (++i2 < a_end && i2 < b_end) {\n            if ((t2 = map.get(a2[i2])) == null || t2 !== idx + sequence) {\n              break;\n            }\n            sequence++;\n          }\n          if (sequence > idx - b_start) {\n            let node2 = a2[a_start];\n            while (b_start < idx) {\n              parent.insertBefore(b[b_start++], node2);\n            }\n          } else {\n            parent.replaceChild(b[b_start++], a2[a_start++]);\n          }\n        } else {\n          a_start++;\n        }\n      } else {\n        a2[a_start++].remove();\n      }\n    }\n  }\n}\nlet REUSED_MARKER = /* @__PURE__ */ Symbol();\nfunction text(marker, expression, insert) {\n  let node = document.createTextNode(\"\");\n  insert(marker, node);\n  effect(() => node.data = expression());\n}\nfunction show(marker, expression) {\n  let instance = scope();\n  let current;\n  let end;\n  effect(() => {\n    let block = expression();\n    if (block === current) {\n      return;\n    }\n    if (end) {\n      instance.clear();\n      destroy_block(marker, end);\n      end = null;\n    }\n    current = block;\n    if (!block) {\n      return;\n    }\n    end = instance.run(() => block(marker));\n  });\n}\nfunction each(marker, block, expression, fallback_block) {\n  let parts = [];\n  let depth = eval_scope.a + 1;\n  let fallback_part = null;\n  effect(() => {\n    let items = expression();\n    let index = 0;\n    let items_len = items.length;\n    let parts_len = parts.length;\n    if (fallback_block && fallback_part && items_len > 0) {\n      let instance = fallback_part[0];\n      let end = fallback_part[1];\n      instance.clear();\n      destroy_block(marker, end);\n      fallback_part = null;\n    }\n    for (; index < items_len; index++) {\n      if (parts[index]) {\n        let item = parts[index][2];\n        item.value = items[index];\n      } else {\n        let prev = parts[index - 1];\n        let start = prev ? prev[1] : marker;\n        let item = signal(items[index]);\n        let instance = scope(true);\n        instance.a = depth;\n        parts[index] = [instance, instance.run(() => block(start, item, index)), item];\n      }\n    }\n    if (parts_len > items_len) {\n      let prev = parts[index - 1];\n      let start = prev ? prev[1] : marker;\n      let end = parts[parts_len - 1][1];\n      for (; index < parts_len; index++) {\n        parts[index][0].clear();\n      }\n      destroy_block(start, end);\n      parts.length = items_len;\n    }\n    if (fallback_block && !fallback_part && items_len < 1) {\n      let instance = scope(true);\n      instance.a = depth;\n      fallback_part = [instance, instance.run(() => fallback_block(marker))];\n    }\n  });\n  cleanup(() => {\n    for (let i2 = 0, l = parts.length; i2 < l; i2++) {\n      let part = parts[i2];\n      let instance = part[0];\n      instance.clear();\n    }\n  });\n}\nfunction keyed_each(marker, block, expression, get_key, fallback_block) {\n  let depth = eval_scope.a + 1;\n  let parts = [];\n  let keys = [];\n  let dom = [];\n  let fallback_part = null;\n  effect(() => {\n    let items = expression();\n    let idx = 0;\n    let items_len = items.length;\n    let parts_len = parts.length;\n    let next_parts = [];\n    let next_keys = [];\n    let next_dom = [];\n    let _part_idx;\n    let _part;\n    let _item;\n    let _key;\n    let _is_reused = false;\n    if (fallback_block && fallback_part && items_len > 0) {\n      let instance = fallback_part[0];\n      let end = fallback_part[1];\n      instance.clear();\n      destroy_block(marker, end);\n      fallback_part = null;\n    }\n    for (; idx < items_len; idx++) {\n      _item = items[idx];\n      _key = get_key(_item);\n      _part_idx = keys.indexOf(_key);\n      if (_part_idx !== -1) {\n        _part = parts[_part_idx];\n        _part[1].value = _item;\n        _part[2].value = idx;\n        next_dom = next_dom.concat(_part[4]);\n        parts[_part_idx] = keys[_part_idx] = REUSED_MARKER;\n        _is_reused = true;\n      } else {\n        let prev = next_parts[idx - 1];\n        let start = prev ? prev[3] : marker;\n        let item = signal(_item);\n        let index = signal(idx);\n        let instance = scope(true);\n        let part_marker = instance.run(() => block(start, item, index));\n        let part_dom = collect_part_dom(start.nextSibling, part_marker);\n        instance.a = depth;\n        next_dom = next_dom.concat(part_dom);\n        _part = [instance, item, index, part_marker, part_dom];\n      }\n      next_parts.push(_part);\n      next_keys.push(_key);\n    }\n    for (idx = 0; idx < parts_len; idx++) {\n      _part = parts[idx];\n      if (_part !== REUSED_MARKER) {\n        let dom2 = _part[4];\n        _part[0].clear();\n        remove_parts(dom2[0], dom2[dom2.length - 1]);\n      }\n    }\n    if (_is_reused) {\n      reconcile_dom(marker.parentNode, dom, dom = next_dom);\n    } else {\n      dom = next_dom;\n    }\n    parts = next_parts;\n    keys = next_keys;\n    if (fallback_block && !fallback_part && items_len < 1) {\n      let instance = scope(true);\n      instance.a = depth;\n      fallback_part = [instance, instance.run(() => fallback_block(marker))];\n    }\n  });\n  cleanup(() => {\n    for (let i2 = 0, l = parts.length; i2 < l; i2++) {\n      let part = parts[i2];\n      let instance = part[0];\n      instance.clear();\n    }\n  });\n}\nfunction collect_part_dom(a2, b) {\n  let array = [];\n  while (a2) {\n    array.push(a2);\n    if (a2 === b) {\n      break;\n    }\n    a2 = a2.nextSibling;\n  }\n  return array;\n}\nfunction promise(marker, pending, resolved, rejected, expression) {\n  let status = signal(0);\n  let result = signal(null);\n  let curr_key;\n  let curr_promise;\n  let resolved_block = resolved && ((marker2) => resolved(marker2, result));\n  let rejected_block = rejected && ((marker2) => rejected(marker2, result));\n  effect(() => {\n    try {\n      let next = expression();\n      let promisified = next instanceof Promise || \"then\" in next ? next : Promise.resolve(next);\n      if (curr_promise === promisified) {\n        return;\n      }\n      let key = curr_key = {};\n      curr_promise = promisified;\n      result.value = null;\n      status.value = 1;\n      promisified.then(\n        (val) => {\n          if (curr_key === key) {\n            batch(() => {\n              result.value = val;\n              status.value = 2;\n            });\n          }\n        },\n        (err) => {\n          if (curr_key === key) {\n            batch(() => {\n              result.value = err;\n              status.value = 3;\n            });\n          }\n        }\n      );\n    } catch (err) {\n      result.value = err;\n      status.value = 3;\n    }\n  });\n  show(marker, () => {\n    let current = status.value;\n    return current === 1 ? pending : current === 2 ? resolved_block : current === 3 ? rejected_block : null;\n  });\n}\nfunction keyed(marker, block, expression) {\n  let init;\n  let curr;\n  let end;\n  let instance = scope();\n  effect(() => {\n    let next = expression();\n    if (init && is(next, curr)) {\n      return;\n    }\n    if (end) {\n      instance.clear();\n      destroy_block(marker, end);\n      end = null;\n    }\n    init = true;\n    curr = next;\n    end = instance.run(() => block(marker));\n  });\n}\nfunction dynamic(marker, block, expression) {\n  let host = marker;\n  let instance = scope();\n  let current;\n  effect(() => {\n    let next = expression();\n    if (next === current) {\n      return;\n    }\n    current = next;\n    instance.clear();\n    replace(host, host = next ? instance.run(() => block(next)) : marker, false);\n  });\n}\nfunction destroy_block(marker, end) {\n  remove_parts(marker.nextSibling, end);\n}\nexport { batch, cleanup, dynamic, each, effect, eval_scope, is, keyed, keyed_each, promise, remove_parts, replace, scope, show, signal, text };\n", "import {\n\tprop,\n\thtml,\n\tclone,\n\tfirst_child,\n\tnext_sibling,\n\teffect,\n\tattr,\n\ttext,\n\treplace,\n\tappend,\n\tafter,\n\teach,\n\tdefine\n} from \"@intrnl/velvet/internal\";\n\nlet template0 = /*#__PURE__*/ html(\"<table class='table table-striped latest-data'><tbody><!></tbody></table>\");\nlet template1 = /*#__PURE__*/ html(\"<tr><td class=dbname><!></td><td class=query-count><span> <!> </span></td></tr>\");\nlet template2 = /*#__PURE__*/ html(\"<td><!> <div class='popover left'><div class=popover-content></div><div class=arrow></div></div></td>\");\n\nfunction setup($$root, $$host) {\n\tlet dbs = prop(0, () => []);\n\tlet fragment0 = /*#__PURE__*/ clone(template0);\n\tlet child0 = /*#__PURE__*/ first_child(fragment0);\n\tlet child1 = /*#__PURE__*/ first_child(child0);\n\tlet child16 = /*#__PURE__*/ first_child(child1);\n\n\tlet block1 = ($$root, db) => {\n\t\tlet fragment1 = /*#__PURE__*/ clone(template1);\n\t\tlet child2 = /*#__PURE__*/ first_child(fragment1);\n\t\tlet child3 = /*#__PURE__*/ first_child(child2);\n\t\tlet child4 = /*#__PURE__*/ first_child(child3);\n\t\tlet child5 = /*#__PURE__*/ next_sibling(child3);\n\t\tlet child6 = /*#__PURE__*/ first_child(child5);\n\t\tlet child7 = /*#__PURE__*/ first_child(child6);\n\t\tlet child8 = /*#__PURE__*/ next_sibling(child7);\n\t\tlet child9 = /*#__PURE__*/ next_sibling(child8);\n\n\t\tlet block2 = ($$root, query) => {\n\t\t\tlet fragment2 = /*#__PURE__*/ clone(template2);\n\t\t\tlet child10 = /*#__PURE__*/ first_child(fragment2);\n\t\t\tlet child11 = /*#__PURE__*/ first_child(child10);\n\t\t\tlet child12 = /*#__PURE__*/ next_sibling(child11);\n\t\t\tlet child13 = /*#__PURE__*/ next_sibling(child12);\n\t\t\tlet child14 = /*#__PURE__*/ first_child(child13);\n\t\t\tlet child15 = /*#__PURE__*/ next_sibling(child14);\n\t\t\teffect(() => attr(child10, \"class\", `Query ${query.value.elapsedClassName}`));\n\t\t\ttext(child11, () => query.value.formatElapsed, replace);\n\t\t\ttext(child14, () => query.value.query, append);\n\t\t\tafter($$root, fragment2);\n\t\t\treturn child10;\n\t\t};\n\n\t\ttext(child4, () => db.value.dbname, replace);\n\t\teffect(() => attr(child6, \"class\", db.value.lastSample.countClassName));\n\t\ttext(child8, () => db.value.lastSample.nbQueries, replace);\n\t\teach(child5, block2, () => db.value.lastSample.topFiveQueries);\n\t\tafter($$root, fragment1);\n\t\treturn child2;\n\t};\n\n\teach(child16, block1, () => dbs.value);\n\tappend($$root, fragment0);\n}\n\nexport default define(\"x-app\", setup, { dbs: 0 }, []);", "import * as perfmon from 'perf-monitor';\n\nimport App from './App.velvet';\nimport './style.css';\n\n// we don't need shadow DOM here, make Velvet think it's already been created.\nApp.prototype.attachShadow = function () {\n\treturn this;\n};\n\nconst app = new App();\napp.dbs = ENV.generateData().toArray();\n\ndocument.body.appendChild(app);\n\nif (!(/[&?]perfmon=(false|off|0)\\b/).test(location.search)) {\n\tperfmon.startFPSMonitor();\n\tperfmon.startMemMonitor();\n\tperfmon.initProfiler('view update');\n\n\tfunction redraw () {\n\t\tconst next = ENV.generateData().toArray();\n\n\t\tperfmon.startProfile('view update');\n\t\tapp.dbs = next;\n\t\tperfmon.endProfile('view update');\n\n\t\tsetTimeout(redraw, ENV.timeout);\n\t}\n\n\tredraw();\n}\nelse {\n\tfunction redraw () {\n\t\tconst next = ENV.generateData().toArray();\n\n\t\tapp.dbs = next;\n\n\t\tsetTimeout(redraw, ENV.timeout);\n\t}\n\n\tredraw();\n}\n"],
  "mappings": "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",
  "names": ["MonitorMaxSamples", "MonitorSamplesResult", "min", "max", "mean", "last", "MonitorSamples", "maxSamples", "v", "fn", "samples", "sum", "i", "k", "BasicCounter", "value", "TimestampedValue", "timestamp", "SlidingCounter", "interval", "_this", "now", "nextTimestamp", "frameTasks", "rafId", "scheduleNextFrameTask", "task", "t", "tasks", "__extends", "extendStatics", "d", "b", "p", "__", "MonitorGraphHeight", "MonitorGraphWidth", "Widget", "name", "MonitorWidgetFlags", "MonitorWidget", "_super", "flags", "unitName", "label", "text", "result", "scale", "CounterWidget", "counter", "container", "initialized", "checkInit", "container", "initialized", "startFPSMonitor", "flags", "MonitorWidgetFlags", "data", "MonitorSamples", "MonitorMaxSamples", "w", "MonitorWidget", "alpha", "last", "fps", "update", "now", "startMemMonitor", "ProfilerDetails", "name", "unitName", "profilerInstances", "CounterDetails", "interval", "_this", "BasicCounter", "SlidingCounter", "CounterWidget", "initProfiler", "name", "flags", "checkInit", "profiler", "profilerInstances", "ProfilerDetails", "container", "startProfile", "name", "profiler", "profilerInstances", "endProfile", "now", "_Object", "_Symbol", "RE_HYPHENATE", "hyphenate", "str", "RE_HYPHENATE", "is_function", "x", "undefined$1", "RUNNING", "NOTIFIED", "OUTDATED", "DISPOSED", "TRACKING", "depth_sort", "a", "b", "eval_scope", "eval_context", "eval_sources", "eval_sources_idx", "batched_effects", "batch_depth", "batch_iteration", "clock", "access_clock", "start_batch", "end_batch", "error", "has_error", "effects", "idx", "len", "undefined$1", "effect2", "NOTIFIED", "DISPOSED", "need_recompute", "err", "target", "sources", "source", "cleanup_context", "prune_context_sources", "l", "i", "dispose_effect", "Signal", "value", "_this", "targets", "next", "Effect", "TRACKING", "compute", "_this", "flags", "RUNNING", "clock", "access_clock", "OUTDATED", "prev_context", "eval_context", "prev_sources", "eval_sources", "prev_sources_idx", "eval_sources_idx", "start_batch", "undefined$1", "cleanup_context", "DISPOSED", "dispose_effect", "end_batch", "NOTIFIED", "batched_effects", "Scope", "detached", "eval_scope", "callback", "prev_scope", "scopes", "cleanups", "scope2", "cleanup2", "scope", "cleanup", "is_function", "signal", "value", "Signal", "effect", "compute", "effect2", "Effect", "dispose", "error", "eval_scope", "ENABLE_RANDOM_TAGS", "RANDOM_TAG", "curr_host", "default_value", "_Symbol", "VelvetComponent", "scope", "host", "props", "definition", "prop2", "index", "signal", "setup", "styles", "instance", "hooks", "root", "prev_host", "idx", "len", "hook", "ret", "is_function", "attr2", "prev", "next", "mapping", "define", "tag", "observed_attrs", "attr_to_prop", "_Object", "Component", "hyphen", "hyphenate", "ENABLE_RANDOM_TAGS", "RANDOM_TAG", "prop", "index", "value", "state", "curr_host", "default_value", "is_function", "html", "fragment", "is_wrapped", "node", "content", "wrapper", "child", "clone", "template", "first_child", "node", "next_sibling", "replace", "ref", "node", "adopt", "child", "append", "after", "remove_parts", "a", "b", "curr", "attr", "node", "name", "value", "text", "marker", "expression", "insert", "node", "effect", "each", "marker", "block", "expression", "fallback_block", "parts", "depth", "eval_scope", "fallback_part", "effect", "items", "index", "items_len", "parts_len", "instance", "end", "destroy_block", "item", "prev", "start", "signal", "scope", "cleanup", "i2", "l", "destroy_block", "marker", "end", "remove_parts", "template0", "html", "template1", "template2", "setup", "$$root", "$$host", "dbs", "prop", "fragment0", "clone", "each", "first_child", "db", "fragment1", "child2", "child3", "child4", "child5", "next_sibling", "child6", "child8", "child9", "block2", "query", "fragment2", "child10", "child11", "child14", "child15", "effect", "attr", "text", "replace", "append", "after", "App_default", "define", "App_default", "app", "redraw", "next", "startProfile", "endProfile", "startFPSMonitor", "startMemMonitor", "initProfiler"]
}

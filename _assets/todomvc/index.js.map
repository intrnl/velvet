{
  "version": 3,
  "sources": ["../../../../packages/runtime/dist/context-82e99b73.js", "../../../../packages/runtime/dist/internal.js", "../../../src/todomvc/App.velvet", "../../../src/todomvc/index.js"],
  "sourcesContent": ["let _Object = Object;\nlet _Symbol = Symbol;\nlet RE_HYPHENATE = /\\B([A-Z])/g;\nlet noop = () => {\n};\nfunction hyphenate(str) {\n  return str.replace(RE_HYPHENATE, \"-$1\").toLowerCase();\n}\nlet is = /* @__PURE__ */ _Object.is.bind(_Object);\nlet assign = /* @__PURE__ */ _Object.assign.bind(_Object);\nlet is_function = (x) => typeof x === \"function\";\nfunction to_number(value) {\n  return value === \"\" ? null : +value;\n}\nlet undefined$1;\nlet RUNNING = 1 << 0;\nlet NOTIFIED = 1 << 1;\nlet OUTDATED = 1 << 2;\nlet DISPOSED = 1 << 3;\nlet HAS_ERROR = 1 << 4;\nlet TRACKING = 1 << 5;\nlet depth_sort = (a, b) => a.e - b.e;\nlet eval_scope;\nlet eval_context;\nlet eval_sources;\nlet eval_sources_idx = 0;\nlet batched_effects;\nlet batch_depth = 0;\nlet batch_iteration = 0;\nlet clock = 0;\nlet access_clock = 0;\nfunction start_batch() {\n  batch_depth++;\n}\nfunction end_batch() {\n  if (batch_depth > 1) {\n    batch_depth--;\n    return;\n  }\n  let error;\n  let has_error = false;\n  while (batched_effects) {\n    let effects = batched_effects.sort(depth_sort);\n    let idx = 0;\n    let len = effects.length;\n    batched_effects = undefined$1;\n    batch_iteration++;\n    for (; idx < len; idx++) {\n      let effect2 = effects[idx];\n      effect2.a &= ~NOTIFIED;\n      if (!(effect2.a & DISPOSED) && need_recompute(effect2)) {\n        try {\n          effect2.f();\n        } catch (err) {\n          if (!has_error) {\n            error = err;\n            has_error = true;\n          }\n        }\n      }\n    }\n  }\n  batch_iteration = 0;\n  batch_depth--;\n  if (has_error) {\n    throw error;\n  }\n}\nfunction need_recompute(target) {\n  let sources = target.b;\n  let len = sources.length;\n  let idx = 0;\n  let source;\n  for (; idx < len; idx++) {\n    source = sources[idx];\n    if (source.d > target.d || source.f()) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction cleanup_context() {\n  let sources = eval_context.b;\n  if (eval_sources) {\n    prune_context_sources();\n    if (eval_sources_idx > 0) {\n      let l = eval_sources.length;\n      let i = 0;\n      sources.length = eval_sources_idx + l;\n      for (; i < l; i++) {\n        sources[eval_sources_idx + i] = eval_sources[i];\n      }\n    } else {\n      sources = eval_context.b = eval_sources;\n    }\n    let len = sources.length;\n    let idx = eval_sources_idx;\n    for (; idx < len; idx++) {\n      let source = sources[idx];\n      if (eval_context.a & TRACKING) {\n        source.k(eval_context);\n      }\n    }\n  } else if (eval_sources_idx < eval_context.b.length) {\n    prune_context_sources();\n    sources.length = eval_sources_idx;\n  }\n}\nfunction prune_context_sources() {\n  let sources = eval_context.b;\n  let len = sources.length;\n  let idx = eval_sources_idx;\n  for (; idx < len; idx++) {\n    let source = sources[idx];\n    source.i(eval_context);\n  }\n}\nfunction dispose_effect(effect2) {\n  let sources = effect2.b;\n  let len = sources.length;\n  let idx = 0;\n  for (; idx < len; idx++) {\n    sources[idx].i(effect2);\n  }\n  sources.length = 0;\n}\nclass Signal {\n  /** @internal @type {number} */\n  d = -1;\n  /** @internal @type {number} */\n  g = -1;\n  /** @internal @type {Array<Computed | Effect>} */\n  h = [];\n  /** @internal @type {T} */\n  c;\n  /**\n   * @param {T} value\n   */\n  constructor(value) {\n    let _this = this;\n    _this.c = value;\n  }\n  /**\n   * @internal\n   * @returns {boolean}\n   */\n  f() {\n    return false;\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  k(target) {\n    let _this = this;\n    _this.h.push(target);\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  i(target) {\n    let _this = this;\n    let targets = _this.h;\n    let idx = targets.indexOf(target);\n    targets.splice(idx, 1);\n  }\n  /**\n   * @returns {T}\n   */\n  peek() {\n    let _this = this;\n    return _this.c;\n  }\n  /** @type {T} */\n  get value() {\n    let _this = this;\n    if (eval_context && eval_context.g !== _this.g) {\n      _this.g = eval_context.g;\n      if (!eval_sources) {\n        if (eval_context.b[eval_sources_idx] === _this) {\n          eval_sources_idx++;\n        } else {\n          eval_sources = [_this];\n        }\n      } else {\n        eval_sources.push(_this);\n      }\n    }\n    return _this.c;\n  }\n  set value(next) {\n    let _this = this;\n    if (_this.c !== next) {\n      _this.c = next;\n      _this.d = ++clock;\n      if (batch_iteration < 100) {\n        let targets = _this.h;\n        let len = targets.length;\n        let idx = 0;\n        start_batch();\n        for (; idx < len; idx++) {\n          targets[idx].l();\n        }\n        end_batch();\n      }\n    }\n  }\n}\nclass Computed extends Signal {\n  /** @internal @type {Array<Signal>} */\n  b = [];\n  /** @internal @type {number} */\n  a = OUTDATED;\n  /** @internal @type {number} */\n  m = -1;\n  /** @internal @type {() => T} */\n  j;\n  /**\n   * @param {() => T} compute\n   */\n  constructor(compute) {\n    super();\n    let _this = this;\n    _this.j = compute;\n  }\n  /**\n   * @internal\n   * @returns {boolean}\n   */\n  f() {\n    let _this = this;\n    let flags = _this.a &= ~NOTIFIED;\n    if (flags & RUNNING || (flags & TRACKING ? !(flags & OUTDATED) : _this.m === clock)) {\n      return false;\n    }\n    _this.a = flags & ~OUTDATED | RUNNING;\n    _this.m = clock;\n    if (_this.d > -1 && !need_recompute(_this)) {\n      _this.a &= ~RUNNING;\n      return false;\n    }\n    let stale = false;\n    let prev_context = eval_context;\n    let prev_sources = eval_sources;\n    let prev_sources_idx = eval_sources_idx;\n    let value;\n    try {\n      eval_context = _this;\n      eval_sources = undefined$1;\n      eval_sources_idx = 0;\n      value = _this.j();\n      if (flags & HAS_ERROR || _this.c !== value || _this.d === -1) {\n        stale = true;\n        _this.c = value;\n        _this.a &= ~HAS_ERROR;\n        _this.d = ++clock;\n      }\n    } catch (err) {\n      stale = true;\n      _this.c = err;\n      _this.a |= HAS_ERROR;\n      _this.d = ++clock;\n    }\n    cleanup_context();\n    eval_context = prev_context;\n    eval_sources = prev_sources;\n    eval_sources_idx = prev_sources_idx;\n    _this.a &= ~RUNNING;\n    return stale;\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  k(target) {\n    let _this = this;\n    if (_this.h.length < 1) {\n      let sources = _this.b;\n      let len = sources.length;\n      let idx = 0;\n      _this.a |= TRACKING;\n      for (; idx < len; idx++) {\n        sources[idx].k(_this);\n      }\n    }\n    super.k(target);\n  }\n  /**\n   * @internal\n   * @param {Computed | Effect} target\n   */\n  i(target) {\n    let _this = this;\n    super.i(target);\n    if (_this.h.length < 1) {\n      let sources = _this.b;\n      let len = sources.length;\n      let idx = 0;\n      _this.a &= ~TRACKING;\n      for (; idx < len; idx++) {\n        sources[idx].i(_this);\n      }\n    }\n  }\n  /**\n   * @internal\n   */\n  l() {\n    let _this = this;\n    if (!(_this.a & (NOTIFIED | RUNNING))) {\n      let targets = _this.h;\n      let len = targets.length;\n      let idx = 0;\n      _this.a |= OUTDATED | NOTIFIED;\n      for (; idx < len; idx++) {\n        targets[idx].l();\n      }\n    }\n  }\n  peek() {\n    let _this = this;\n    _this.f();\n    if (_this.a & HAS_ERROR) {\n      throw _this.c;\n    }\n    return _this.c;\n  }\n  get value() {\n    let _this = this;\n    _this.f();\n    if (_this.a & HAS_ERROR) {\n      throw super.value;\n    }\n    return super.value;\n  }\n  set value(next) {\n    super.value = next;\n  }\n}\nclass Effect {\n  /** @internal @type {number} */\n  d = 0;\n  /** @internal @type {number} */\n  g = 0;\n  /** @internal @type {Array<Signal>} */\n  b = [];\n  /** @internal @type {number} */\n  a = TRACKING;\n  /** @internal @type {number} */\n  e = 0;\n  /** @internal @type {() => void} */\n  j;\n  /**\n   * @param {() => void} compute\n   */\n  constructor(compute) {\n    let _this = this;\n    _this.j = compute;\n  }\n  /**\n   * @internal\n   */\n  f() {\n    let _this = this;\n    let flags = _this.a;\n    if (flags & RUNNING) {\n      return;\n    }\n    _this.d = clock;\n    _this.g = access_clock++;\n    _this.a = flags & ~OUTDATED | RUNNING;\n    let prev_context = eval_context;\n    let prev_sources = eval_sources;\n    let prev_sources_idx = eval_sources_idx;\n    try {\n      start_batch();\n      eval_context = _this;\n      eval_sources = undefined$1;\n      eval_sources_idx = 0;\n      _this.j();\n    } finally {\n      cleanup_context();\n      eval_context = prev_context;\n      eval_sources = prev_sources;\n      eval_sources_idx = prev_sources_idx;\n      _this.a &= ~RUNNING;\n      if (_this.a & DISPOSED) {\n        dispose_effect(_this);\n      }\n      end_batch();\n    }\n  }\n  /**\n   * @internal\n   */\n  l() {\n    let _this = this;\n    if (!(_this.a & (NOTIFIED | RUNNING))) {\n      _this.a |= OUTDATED | NOTIFIED;\n      (batched_effects ||= []).push(_this);\n    }\n  }\n  /**\n   * @internal\n   */\n  n() {\n    let _this = this;\n    _this.a |= DISPOSED;\n    if (!(_this.a & RUNNING)) {\n      dispose_effect(_this);\n    }\n  }\n}\nclass Scope {\n  /**\n   * @param {boolean} [detached]\n   */\n  constructor(detached) {\n    let _this = this;\n    _this.scopes = [];\n    _this.cleanups = [];\n    _this.parent = undefined$1;\n    _this.e = 0;\n    if (!detached && eval_scope) {\n      _this.parent = eval_scope;\n      _this.e = eval_scope.e + 1;\n      eval_scope.scopes.push(_this);\n    }\n  }\n  /**\n   * @template {T}\n   * @param {() => T} callback\n   * @returns {T}\n   */\n  run(callback) {\n    let prev_scope = eval_scope;\n    try {\n      eval_scope = this;\n      return callback();\n    } finally {\n      eval_scope = prev_scope;\n    }\n  }\n  clear() {\n    let _this = this;\n    let scopes = _this.scopes;\n    let cleanups = _this.cleanups;\n    for (let scope2 of scopes) {\n      scope2.clear();\n      scope2.parent = undefined$1;\n    }\n    for (let cleanup2 of cleanups) {\n      cleanup2();\n    }\n    scopes.length = 0;\n    cleanups.length = 0;\n  }\n}\nfunction scope(detached) {\n  return new Scope(detached);\n}\nfunction cleanup(callback) {\n  if (is_function(callback) && eval_scope) {\n    eval_scope.cleanups.push(callback);\n  }\n}\nfunction batch(callback) {\n  if (batch_depth > 0) {\n    return callback();\n  }\n  start_batch();\n  try {\n    return callback();\n  } finally {\n    end_batch();\n  }\n}\nfunction untrack(callback) {\n  let prev_context = eval_context;\n  try {\n    eval_context = undefined$1;\n    return callback();\n  } finally {\n    eval_context = prev_context;\n  }\n}\nfunction peek(value) {\n  if (value instanceof Signal) {\n    return value.peek();\n  }\n  return value;\n}\nfunction signal(value) {\n  return new Signal(value);\n}\nfunction computed(compute) {\n  return new Computed(compute);\n}\nfunction effect(compute) {\n  let effect2 = new Effect(compute);\n  let dispose = effect2.n.bind(effect2);\n  try {\n    effect2.f();\n  } catch (error) {\n    dispose();\n    throw error;\n  }\n  if (eval_scope && effect2.b.length > 0) {\n    effect2.e = eval_scope.e;\n    eval_scope.cleanups.push(dispose);\n  }\n  return dispose;\n}\nlet ENABLE_RANDOM_TAGS = false;\nlet RANDOM_TAG = 1;\nfunction use_random_tags() {\n  ENABLE_RANDOM_TAGS = true;\n}\nlet curr_host = null;\nlet default_value = _Symbol();\nclass VelvetComponent extends HTMLElement {\n  // static $c: setup function\n  // static $a: attr to prop definition\n  // static $d: prop definitions\n  // static $s: stylesheets\n  /** is mounted */\n  $m = false;\n  /** scope instance */\n  $c = scope(true);\n  /** @type {Record<number, Signal>} props */\n  $p = {};\n  /** on mount hooks */\n  $h = [];\n  constructor() {\n    super();\n    let host = this;\n    let props = host.$p;\n    let definition = host.constructor.$d;\n    for (let prop2 in definition) {\n      let index = definition[prop2];\n      props[index] = signal(default_value);\n    }\n  }\n  connectedCallback() {\n    let host = this;\n    if (!host.$m) {\n      host.$m = true;\n      let setup = host.constructor.$c;\n      let styles = host.constructor.$s;\n      let instance = host.$c;\n      let hooks = host.$h;\n      let root = host.shadowRoot;\n      if (!root) {\n        root = host.attachShadow({ mode: \"open\" });\n        root.adoptedStyleSheets = styles;\n      }\n      let prev_host = curr_host;\n      try {\n        curr_host = host;\n        instance.run(() => setup(root, host));\n        for (let idx = 0, len = hooks.length; idx < len; idx++) {\n          let hook = hooks[idx];\n          let ret = hook();\n          if (is_function(ret)) {\n            instance.cleanups.push(ret);\n          }\n        }\n        hooks.length = 0;\n      } finally {\n        curr_host = prev_host;\n      }\n    }\n  }\n  disconnectedCallback() {\n    let host = this;\n    if (host.$m) {\n      host.$c.clear();\n      host.shadowRoot.innerHTML = \"\";\n      host.$m = false;\n    }\n  }\n  attributeChangedCallback(attr2, prev, next) {\n    let host = this;\n    let mapping = host.constructor.$d;\n    if (attr2 in mapping) {\n      host.$p[mapping[attr2]].value = next === \"\" ? true : next;\n    }\n  }\n}\nfunction define(tag, setup, definition, styles) {\n  let observed_attrs = [];\n  let attr_to_prop = _Object.create(null);\n  class Component extends VelvetComponent {\n    static observedAttributes = observed_attrs;\n    static $c = setup;\n    static $a = attr_to_prop;\n    static $d = definition;\n    static $s = styles;\n  }\n  for (let prop2 in definition) {\n    let index = definition[prop2];\n    let hyphen = hyphenate(prop2);\n    attr_to_prop[hyphen] = prop2;\n    observed_attrs.push(hyphen);\n    _Object.defineProperty(Component.prototype, prop2, {\n      /** @this VelvetComponent */\n      get() {\n        return this.$p[index].c;\n      },\n      /** @this VelvetComponent */\n      set(next) {\n        this.$p[index].value = next;\n      }\n    });\n  }\n  if (ENABLE_RANDOM_TAGS) {\n    tag = \"velvet-\" + RANDOM_TAG++;\n  }\n  if (tag) {\n    customElements.define(tag, Component);\n  }\n  return Component;\n}\nfunction css(text) {\n  const style = new CSSStyleSheet();\n  style.replaceSync(text);\n  return style;\n}\nfunction prop(index, value) {\n  let state = curr_host.$p[index];\n  if (state.value === default_value) {\n    state.value = is_function(value) ? value() : value;\n  }\n  return state;\n}\nfunction on_mount(fn) {\n  if (is_function(fn)) {\n    curr_host.$h.push(fn);\n  }\n}\nfunction event_dispatcher() {\n  let host = curr_host;\n  return (type, detail) => {\n    let event = new CustomEvent(type, { detail, bubbles: false });\n    host.dispatchEvent(event);\n  };\n}\nfunction bind(obj) {\n  assign(curr_host, obj);\n}\nfunction use(node, action, getter) {\n  let ref = getter && computed(getter);\n  let instance = action(node, ref && ref.value);\n  if (!instance) {\n    return;\n  }\n  if (is_function(instance.destroy)) {\n    cleanup(() => instance.destroy());\n  }\n  if (ref && ref.b && is_function(instance.update)) {\n    let init = false;\n    effect(() => {\n      let next = ref.value;\n      if (!init) {\n        init = true;\n        return;\n      }\n      instance.update(next);\n    });\n  }\n}\nfunction html(fragment, is_wrapped) {\n  let node = document.createElement(\"template\");\n  node.innerHTML = fragment;\n  if (is_wrapped) {\n    let content = node.content;\n    let wrapper = content.firstChild;\n    let child;\n    wrapper.remove();\n    while (child = wrapper.firstChild) {\n      content.appendChild(child);\n    }\n  }\n  return node;\n}\nfunction create(element) {\n  return document.createElement(element);\n}\nfunction clone(template) {\n  let fragment = document.importNode(template.content, true);\n  return fragment;\n}\n// @__NO_SIDE_EFFECTS__\nfunction first_child(node) {\n  return node.firstChild;\n}\n// @__NO_SIDE_EFFECTS__\nfunction next_sibling(node) {\n  return node.nextSibling;\n}\nfunction traverse(node, indices) {\n  let ref = node;\n  let i = 0;\n  let il = indices.length;\n  let x;\n  let j;\n  for (; i < il; i++) {\n    x = indices[i];\n    ref = ref.firstChild;\n    for (j = 0; j < x; j++) {\n      ref = ref.nextSibling;\n    }\n  }\n  return ref;\n}\nfunction replace(ref, node, adopt) {\n  ref.replaceWith(node);\n  if (adopt) {\n    let child;\n    while (child = ref.firstChild) {\n      node.appendChild(child);\n    }\n  }\n}\nfunction append(ref, node) {\n  ref.append(node);\n}\nfunction after(ref, node) {\n  ref.after(node);\n}\nfunction remove_parts(a, b) {\n  let node = a;\n  if (b.nextSibling === a) {\n    return;\n  }\n  while (node) {\n    let curr = node;\n    node = node.nextSibling;\n    curr.remove();\n    if (curr === b) {\n      break;\n    }\n  }\n}\nfunction on(node, type, listener, options) {\n  node.addEventListener(type, listener, options);\n}\nfunction toggle(node, name, value) {\n  node.toggleAttribute(name, value);\n}\nfunction attr(node, name, value) {\n  node.setAttribute(name, value);\n}\nfunction attr_ifdef(node, name, value) {\n  let map = node.$ifd || (node.$ifd = {});\n  let def = value != null;\n  if (def) {\n    attr(node, name, value);\n  } else if (map[name]) {\n    node.removeAttribute(name);\n  }\n  map[name] = def;\n}\nfunction class_toggle(node, name, value) {\n  node.classList.toggle(name, value);\n}\nfunction style_set(node, name, value) {\n  node.style.setProperty(name, value);\n}\nfunction get_checked_values(array, value, checked) {\n  let next = array.slice();\n  if (checked) {\n    next.push(value);\n    return next;\n  } else {\n    let index = array.indexOf(value);\n    if (index > -1) {\n      next.splice(index, 1);\n      return next;\n    }\n  }\n  return array;\n}\nfunction get_select_values(select) {\n  let multiple = select.multiple;\n  let array = [];\n  let selected = select.selectedOptions;\n  for (let i = 0, l = selected.length; i < l; i++) {\n    let option = selected[i];\n    array.push(option.value);\n  }\n  return multiple ? array : array[0];\n}\nfunction set_select_values(select, current) {\n  let multiple = select.multiple;\n  let options = select.options;\n  for (let i = 0, l = options.length; i < l; i++) {\n    let option = options[i];\n    let selected = multiple ? current.includes(option.value) : option.value === current;\n    option.selected = selected;\n    if (selected && !multiple) {\n      return;\n    }\n  }\n}\nlet event_name = \"context-request\";\nfunction provide(key, value) {\n  let listener = (event) => {\n    if (event.context === key) {\n      event.stopImmediatePropagation();\n      event.callback(value, null);\n    }\n  };\n  on(curr_host, event_name, listener);\n}\nfunction inject(key, def) {\n  let value = def;\n  let callback = (next, dispose) => {\n    dispose?.();\n    value = next;\n  };\n  let event = new ContextEvent(key, callback, false);\n  curr_host.dispatchEvent(event);\n  return value;\n}\nclass ContextEvent extends Event {\n  constructor(context, callback, multiple) {\n    super(event_name, { bubbles: true, composed: true });\n    this.context = context;\n    this.callback = callback;\n    this.multiple = multiple;\n  }\n}\nexport { create as A, clone as B, ContextEvent as C, first_child as D, next_sibling as E, traverse as F, append as G, after as H, on as I, toggle as J, attr as K, attr_ifdef as L, class_toggle as M, style_set as N, get_checked_values as O, get_select_values as P, set_select_values as Q, Computed as R, Scope as S, Effect as T, noop as U, VelvetComponent as V, hyphenate as W, assign as X, is_function as Y, to_number as Z, computed as a, batch as b, cleanup as c, effect as d, event_dispatcher as e, peek as f, Signal as g, signal as h, inject as i, untrack as j, eval_scope as k, replace as l, is as m, curr_host as n, on_mount as o, provide as p, default_value as q, remove_parts as r, scope as s, define as t, use_random_tags as u, css as v, prop as w, bind as x, use as y, html as z };\n", "import { d as effect, s as scope, k as eval_scope, h as signal, c as cleanup, r as remove_parts, b as batch, l as replace, m as is } from \"./context-82e99b73.js\";\nexport { R as Computed, C as ContextEvent, T as Effect, S as Scope, g as Signal, V as VelvetComponent, H as after, G as append, X as assign, K as attr, L as attr_ifdef, x as bind, M as class_toggle, B as clone, a as computed, A as create, v as css, n as curr_host, q as default_value, t as define, e as event_dispatcher, D as first_child, O as get_checked_values, P as get_select_values, z as html, W as hyphenate, i as inject, Y as is_function, E as next_sibling, U as noop, I as on, o as on_mount, f as peek, w as prop, p as provide, Q as set_select_values, N as style_set, Z as to_number, J as toggle, F as traverse, j as untrack, y as use, u as use_random_tags } from \"./context-82e99b73.js\";\nfunction reconcile_dom(parent, a2, b) {\n  let b_length = b.length;\n  let a_end = a2.length;\n  let b_end = b_length;\n  let a_start = 0;\n  let b_start = 0;\n  let after = a2[a_end - 1].nextSibling;\n  let map = null;\n  let node;\n  let idx;\n  while (a_start < a_end || b_start < b_end) {\n    if (a2[a_start] === b[b_start]) {\n      a_start++;\n      b_start++;\n      continue;\n    }\n    while (a2[a_end - 1] === b[b_end - 1]) {\n      a_end--;\n      b_end--;\n    }\n    if (a_end === a_start) {\n      node = b_end < b_length ? b_start ? b[b_start - 1].nextSibling : b[b_end - b_start] : after;\n      while (b_start < b_end) {\n        parent.insertBefore(b[b_start++], node);\n      }\n    } else if (b_end === b_start) {\n      while (a_start < a_end) {\n        if (!map || !map.has(a2[a_start])) {\n          a2[a_start].remove();\n        }\n        a_start++;\n      }\n    } else if (a2[a_start] === b[b_end - 1] && b[b_start] === a2[a_end - 1]) {\n      node = a2[--a_end].nextSibling;\n      parent.insertBefore(b[b_start++], a2[a_start++].nextSibling);\n      parent.insertBefore(b[--b_end], node);\n      a2[a_end] = b[b_end];\n    } else {\n      if (!map) {\n        map = /* @__PURE__ */ new Map();\n        let i2 = b_start;\n        while (i2 < b_end) {\n          map.set(b[i2], i2++);\n        }\n      }\n      idx = map.get(a2[a_start]);\n      if (idx != null) {\n        if (b_start < idx && idx < b_end) {\n          let i2 = a_start, sequence = 1, t2;\n          while (++i2 < a_end && i2 < b_end) {\n            if ((t2 = map.get(a2[i2])) == null || t2 !== idx + sequence) {\n              break;\n            }\n            sequence++;\n          }\n          if (sequence > idx - b_start) {\n            let node2 = a2[a_start];\n            while (b_start < idx) {\n              parent.insertBefore(b[b_start++], node2);\n            }\n          } else {\n            parent.replaceChild(b[b_start++], a2[a_start++]);\n          }\n        } else {\n          a_start++;\n        }\n      } else {\n        a2[a_start++].remove();\n      }\n    }\n  }\n}\nlet REUSED_MARKER = /* @__PURE__ */ Symbol();\nfunction text(marker, expression, insert) {\n  let node = document.createTextNode(\"\");\n  insert(marker, node);\n  effect(() => node.data = expression());\n}\nfunction show(marker, expression) {\n  let instance = scope();\n  let current;\n  let end;\n  effect(() => {\n    let block = expression();\n    if (block === current) {\n      return;\n    }\n    if (end) {\n      instance.clear();\n      destroy_block(marker, end);\n      end = null;\n    }\n    current = block;\n    if (!block) {\n      return;\n    }\n    end = instance.run(() => block(marker));\n  });\n}\nfunction each(marker, block, expression, fallback_block) {\n  let parts = [];\n  let depth = eval_scope.a + 1;\n  let fallback_part = null;\n  effect(() => {\n    let items = expression();\n    let index = 0;\n    let items_len = items.length;\n    let parts_len = parts.length;\n    if (fallback_block && fallback_part && items_len > 0) {\n      let instance = fallback_part[0];\n      let end = fallback_part[1];\n      instance.clear();\n      destroy_block(marker, end);\n      fallback_part = null;\n    }\n    for (; index < items_len; index++) {\n      if (parts[index]) {\n        let item = parts[index][2];\n        item.value = items[index];\n      } else {\n        let prev = parts[index - 1];\n        let start = prev ? prev[1] : marker;\n        let item = signal(items[index]);\n        let instance = scope(true);\n        instance.a = depth;\n        parts[index] = [instance, instance.run(() => block(start, item, index)), item];\n      }\n    }\n    if (parts_len > items_len) {\n      let prev = parts[index - 1];\n      let start = prev ? prev[1] : marker;\n      let end = parts[parts_len - 1][1];\n      for (; index < parts_len; index++) {\n        parts[index][0].clear();\n      }\n      destroy_block(start, end);\n      parts.length = items_len;\n    }\n    if (fallback_block && !fallback_part && items_len < 1) {\n      let instance = scope(true);\n      instance.a = depth;\n      fallback_part = [instance, instance.run(() => fallback_block(marker))];\n    }\n  });\n  cleanup(() => {\n    for (let i2 = 0, l = parts.length; i2 < l; i2++) {\n      let part = parts[i2];\n      let instance = part[0];\n      instance.clear();\n    }\n  });\n}\nfunction keyed_each(marker, block, expression, get_key, fallback_block) {\n  let depth = eval_scope.a + 1;\n  let parts = [];\n  let keys = [];\n  let dom = [];\n  let fallback_part = null;\n  effect(() => {\n    let items = expression();\n    let idx = 0;\n    let items_len = items.length;\n    let parts_len = parts.length;\n    let next_parts = [];\n    let next_keys = [];\n    let next_dom = [];\n    let _part_idx;\n    let _part;\n    let _item;\n    let _key;\n    let _is_reused = false;\n    if (fallback_block && fallback_part && items_len > 0) {\n      let instance = fallback_part[0];\n      let end = fallback_part[1];\n      instance.clear();\n      destroy_block(marker, end);\n      fallback_part = null;\n    }\n    for (; idx < items_len; idx++) {\n      _item = items[idx];\n      _key = get_key(_item);\n      _part_idx = keys.indexOf(_key);\n      if (_part_idx !== -1) {\n        _part = parts[_part_idx];\n        _part[1].value = _item;\n        _part[2].value = idx;\n        next_dom = next_dom.concat(_part[4]);\n        parts[_part_idx] = keys[_part_idx] = REUSED_MARKER;\n        _is_reused = true;\n      } else {\n        let prev = next_parts[idx - 1];\n        let start = prev ? prev[3] : marker;\n        let item = signal(_item);\n        let index = signal(idx);\n        let instance = scope(true);\n        let part_marker = instance.run(() => block(start, item, index));\n        let part_dom = collect_part_dom(start.nextSibling, part_marker);\n        instance.a = depth;\n        next_dom = next_dom.concat(part_dom);\n        _part = [instance, item, index, part_marker, part_dom];\n      }\n      next_parts.push(_part);\n      next_keys.push(_key);\n    }\n    for (idx = 0; idx < parts_len; idx++) {\n      _part = parts[idx];\n      if (_part !== REUSED_MARKER) {\n        let dom2 = _part[4];\n        _part[0].clear();\n        remove_parts(dom2[0], dom2[dom2.length - 1]);\n      }\n    }\n    if (_is_reused) {\n      reconcile_dom(marker.parentNode, dom, dom = next_dom);\n    } else {\n      dom = next_dom;\n    }\n    parts = next_parts;\n    keys = next_keys;\n    if (fallback_block && !fallback_part && items_len < 1) {\n      let instance = scope(true);\n      instance.a = depth;\n      fallback_part = [instance, instance.run(() => fallback_block(marker))];\n    }\n  });\n  cleanup(() => {\n    for (let i2 = 0, l = parts.length; i2 < l; i2++) {\n      let part = parts[i2];\n      let instance = part[0];\n      instance.clear();\n    }\n  });\n}\nfunction collect_part_dom(a2, b) {\n  let array = [];\n  while (a2) {\n    array.push(a2);\n    if (a2 === b) {\n      break;\n    }\n    a2 = a2.nextSibling;\n  }\n  return array;\n}\nfunction promise(marker, pending, resolved, rejected, expression) {\n  let status = signal(0);\n  let result = signal(null);\n  let curr_key;\n  let curr_promise;\n  let resolved_block = resolved && ((marker2) => resolved(marker2, result));\n  let rejected_block = rejected && ((marker2) => rejected(marker2, result));\n  effect(() => {\n    try {\n      let next = expression();\n      let promisified = next instanceof Promise || \"then\" in next ? next : Promise.resolve(next);\n      if (curr_promise === promisified) {\n        return;\n      }\n      let key = curr_key = {};\n      curr_promise = promisified;\n      result.value = null;\n      status.value = 1;\n      promisified.then(\n        (val) => {\n          if (curr_key === key) {\n            batch(() => {\n              result.value = val;\n              status.value = 2;\n            });\n          }\n        },\n        (err) => {\n          if (curr_key === key) {\n            batch(() => {\n              result.value = err;\n              status.value = 3;\n            });\n          }\n        }\n      );\n    } catch (err) {\n      result.value = err;\n      status.value = 3;\n    }\n  });\n  show(marker, () => {\n    let current = status.value;\n    return current === 1 ? pending : current === 2 ? resolved_block : current === 3 ? rejected_block : null;\n  });\n}\nfunction keyed(marker, block, expression) {\n  let init;\n  let curr;\n  let end;\n  let instance = scope();\n  effect(() => {\n    let next = expression();\n    if (init && is(next, curr)) {\n      return;\n    }\n    if (end) {\n      instance.clear();\n      destroy_block(marker, end);\n      end = null;\n    }\n    init = true;\n    curr = next;\n    end = instance.run(() => block(marker));\n  });\n}\nfunction dynamic(marker, block, expression) {\n  let host = marker;\n  let instance = scope();\n  let current;\n  effect(() => {\n    let next = expression();\n    if (next === current) {\n      return;\n    }\n    current = next;\n    instance.clear();\n    replace(host, host = next ? instance.run(() => block(next)) : marker, false);\n  });\n}\nfunction destroy_block(marker, end) {\n  remove_parts(marker.nextSibling, end);\n}\nexport { batch, cleanup, dynamic, each, effect, eval_scope, is, keyed, keyed_each, promise, remove_parts, replace, scope, show, signal, text };\n", "import {\n\tsignal,\n\tcomputed,\n\teffect,\n\thtml,\n\tclone,\n\tfirst_child,\n\tnext_sibling,\n\ton,\n\tafter,\n\tclass_toggle,\n\ttext,\n\treplace,\n\tshow,\n\teach,\n\tappend,\n\tdefine\n} from \"@intrnl/velvet/internal\";\n\nlet template0 = /*#__PURE__*/ html(\"<header class=header><h1>todos</h1><input class=new-todo placeholder='What needs to be done?'autofocus></header>\");\nlet template1 = /*#__PURE__*/ html(\"<section class=main><input id=toggle-all class=toggle-all type=checkbox><label for=toggle-all>Mark all as complete</label><ul class=todo-list><!></ul><footer class=footer><span class=todo-count> <strong></strong> <!> left </span><ul class=filters><li><a href=#/>All</a></li><li><a href=#/active>Active</a></li><li><a href=#/completed>Completed</a></li></ul></footer></section>\");\nlet template2 = /*#__PURE__*/ html(\"<li class=todo><div class=view><input class=toggle type=checkbox><label><!></label><button class=destroy></button></div> <!></li>\");\nlet template3 = /*#__PURE__*/ html(\"<input class=edit>\");\nlet template4 = /*#__PURE__*/ html(\"<button class=clear-completed>Clear completed</button>\");\n\nfunction setup($$root, $$host) {\n\tconst ENTER_KEY = 13;\n\tconst ESCAPE_KEY = 27;\n\tconst STORAGE_KEY = 'todos';\n\n\tconst filters = {\n\t\tall: items => items,\n\t\tactive: items => items.filter(item => !item.completed),\n\t\tcompleted: items => items.filter(item => item.completed)\n\t};\n\n\tlet items = signal(JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]'));\n\tlet visibility = signal('all');\n\tlet editing = signal(null);\n\tlet editing_ref = signal(null);\n\tlet filtered_items = computed(() => filters[visibility.value](items.value));\n\tlet remaining = computed(() => filters.active(items.value).length);\n\n\tconst toggle_all = event => {\n\t\titems.value = items.value.map(item => ({ ...item, completed: event.target.checked }));\n\t};\n\n\tconst clear_completed = () => {\n\t\titems.value = items.value.filter(item => !item.completed);\n\t};\n\n\tconst add_todo = event => {\n\t\tif (event.which === ENTER_KEY) {\n\t\t\titems.value = items.value.concat({\n\t\t\t\tid: Date.now(),\n\t\t\t\ttitle: event.target.value,\n\t\t\t\tcompleted: false\n\t\t\t});\n\n\t\t\tevent.target.value = '';\n\t\t}\n\t};\n\n\tconst remove_todo = id => {\n\t\titems.value = items.value.filter(item => item.id !== id);\n\t};\n\n\tconst edit_todo = next => {\n\t\titems.value = items.value.map(item => {\n\t\t\tif (item.id !== next.id) return item;\n\t\t\treturn { ...item, ...next };\n\t\t});\n\t};\n\n\tconst toggle_todo = (id, event) => {\n\t\tedit_todo({ id, completed: event.target.checked });\n\t};\n\n\tconst handle_edit = event => {\n\t\tif (event.which === ENTER_KEY) {\n\t\t\tevent.target.blur();\n\t\t} else if (event.which === ESCAPE_KEY) {\n\t\t\tediting.value = null;\n\t\t\tediting_ref.value = null;\n\t\t}\n\t};\n\n\tconst handle_submit = event => {\n\t\tedit_todo({\n\t\t\tid: editing.value,\n\t\t\ttitle: event.target.value\n\t\t});\n\n\t\tediting.value = null;\n\t\tediting_ref.value = null;\n\t};\n\n\tconst update_view = () => {\n\t\tlet route = window.location.hash.replace(/#\\/?/, '');\n\n\t\tif (!filters[route]) {\n\t\t\troute = 'all';\n\t\t}\n\n\t\tvisibility.value = route;\n\t};\n\n\twindow.addEventListener('hashchange', update_view);\n\tupdate_view();\n\teffect(() => localStorage.setItem(STORAGE_KEY, JSON.stringify(items.value)));\n\n\teffect(() => {\n\t\tif (editing_ref.value) setTimeout(() => editing_ref.value.focus());\n\t});\n\n\tlet fragment0 = /*#__PURE__*/ clone(template0);\n\tlet child0 = /*#__PURE__*/ first_child(fragment0);\n\tlet child1 = /*#__PURE__*/ first_child(child0);\n\tlet child2 = /*#__PURE__*/ first_child(child1);\n\tlet child3 = /*#__PURE__*/ next_sibling(child1);\n\n\tlet block1 = $$root => {\n\t\tlet fragment1 = /*#__PURE__*/ clone(template1);\n\t\tlet child4 = /*#__PURE__*/ first_child(fragment1);\n\t\tlet child5 = /*#__PURE__*/ first_child(child4);\n\t\tlet child6 = /*#__PURE__*/ next_sibling(child5);\n\t\tlet child7 = /*#__PURE__*/ first_child(child6);\n\t\tlet child8 = /*#__PURE__*/ next_sibling(child6);\n\t\tlet child18 = /*#__PURE__*/ first_child(child8);\n\t\tlet child19 = /*#__PURE__*/ next_sibling(child8);\n\t\tlet child20 = /*#__PURE__*/ first_child(child19);\n\t\tlet child21 = /*#__PURE__*/ first_child(child20);\n\t\tlet child22 = /*#__PURE__*/ next_sibling(child21);\n\t\tlet child23 = /*#__PURE__*/ next_sibling(child22);\n\t\tlet child24 = /*#__PURE__*/ next_sibling(child23);\n\t\tlet child25 = /*#__PURE__*/ next_sibling(child24);\n\t\tlet child26 = /*#__PURE__*/ next_sibling(child20);\n\t\tlet child27 = /*#__PURE__*/ first_child(child26);\n\t\tlet child28 = /*#__PURE__*/ first_child(child27);\n\t\tlet child29 = /*#__PURE__*/ first_child(child28);\n\t\tlet child30 = /*#__PURE__*/ next_sibling(child27);\n\t\tlet child31 = /*#__PURE__*/ first_child(child30);\n\t\tlet child32 = /*#__PURE__*/ first_child(child31);\n\t\tlet child33 = /*#__PURE__*/ next_sibling(child30);\n\t\tlet child34 = /*#__PURE__*/ first_child(child33);\n\t\tlet child35 = /*#__PURE__*/ first_child(child34);\n\n\t\tlet block2 = ($$root, item) => {\n\t\t\tlet fragment2 = /*#__PURE__*/ clone(template2);\n\t\t\tlet child9 = /*#__PURE__*/ first_child(fragment2);\n\t\t\tlet child10 = /*#__PURE__*/ first_child(child9);\n\t\t\tlet child11 = /*#__PURE__*/ first_child(child10);\n\t\t\tlet child12 = /*#__PURE__*/ next_sibling(child11);\n\t\t\tlet child13 = /*#__PURE__*/ first_child(child12);\n\t\t\tlet child14 = /*#__PURE__*/ next_sibling(child12);\n\t\t\tlet child15 = /*#__PURE__*/ next_sibling(child10);\n\t\t\tlet child17 = /*#__PURE__*/ next_sibling(child15);\n\n\t\t\tlet block3 = $$root => {\n\t\t\t\tlet fragment3 = /*#__PURE__*/ clone(template3);\n\t\t\t\tlet child16 = /*#__PURE__*/ first_child(fragment3);\n\t\t\t\tediting_ref.value = child16;\n\t\t\t\teffect(() => child16[\"value\"] = item.value.title);\n\t\t\t\ton(child16, \"keydown\", handle_edit);\n\t\t\t\ton(child16, \"blur\", handle_submit);\n\t\t\t\tafter($$root, fragment3);\n\t\t\t\treturn child16;\n\t\t\t};\n\n\t\t\teffect(() => class_toggle(child9, \"completed\", item.value.completed));\n\t\t\teffect(() => class_toggle(child9, \"editing\", editing.value === item.value.id));\n\t\t\teffect(() => child11[\"checked\"] = item.value.completed);\n\t\t\ton(child11, \"change\", event => toggle_todo(item.value.id, event));\n\t\t\ton(child12, \"dblclick\", () => editing.value = item.value.id);\n\t\t\ttext(child13, () => item.value.title, replace);\n\t\t\ton(child14, \"click\", () => remove_todo(item.value.id));\n\t\t\tshow(child17, () => editing.value === item.value.id ? block3 : null);\n\t\t\tafter($$root, fragment2);\n\t\t\treturn child9;\n\t\t};\n\n\t\tlet block4 = $$root => {\n\t\t\tlet fragment4 = /*#__PURE__*/ clone(template4);\n\t\t\tlet child36 = /*#__PURE__*/ first_child(fragment4);\n\t\t\tlet child37 = /*#__PURE__*/ first_child(child36);\n\t\t\ton(child36, \"click\", clear_completed);\n\t\t\tafter($$root, fragment4);\n\t\t\treturn child36;\n\t\t};\n\n\t\teffect(() => child5[\"checked\"] = remaining.value === 0);\n\t\ton(child5, \"change\", toggle_all);\n\t\teach(child18, block2, () => filtered_items.value);\n\t\ttext(child22, () => remaining.value, append);\n\t\ttext(child24, () => remaining.value === 1 ? 'item' : 'items', replace);\n\t\teffect(() => class_toggle(child28, \"selected\", visibility.value === 'all'));\n\t\teffect(() => class_toggle(child31, \"selected\", visibility.value === 'active'));\n\t\teffect(() => class_toggle(child34, \"selected\", visibility.value === 'completed'));\n\t\tshow(child26, () => items.value.length > remaining.value ? block4 : null);\n\t\tafter($$root, fragment1);\n\t\treturn child4;\n\t};\n\n\ton(child3, \"keydown\", add_todo);\n\tshow(child0, () => items.value.length > 0 ? block1 : null);\n\tappend($$root, fragment0);\n}\n\nexport default define(\"x-app\", setup, {}, []);", "import App from './App.velvet';\nimport './style.css';\n\n// we don't want the Shadow DOM to be in our way here, have `attachShadow`\n// return itself instead of creating a shadow root.\n// there isn't any specific reasons why other than making it easier to mess\n// around like in the cases of benchmark automation.\nApp.prototype.attachShadow = function () {\n\treturn this;\n};\n\nconst app = new App();\ndocument.body.append(app);\n"],
  "mappings": "AAAA,IAAIA,GAAU,OACVC,GAAU,OACVC,GAAe,aAGnB,SAASC,GAAUC,EAAK,CACtB,OAAOA,EAAI,QAAQC,GAAc,KAAK,EAAE,YAAY,CACtD,CAGA,IAAIC,GAAeC,GAAM,OAAOA,GAAM,WAItC,IAAIC,EACAC,EAAU,EACVC,EAAW,EACXC,EAAW,EACXC,GAAW,EACXC,EAAY,GACZC,EAAW,GACXC,GAAa,CAACC,EAAGC,IAAMD,EAAE,EAAIC,EAAE,EAC/BC,EACAC,EACAC,EACAC,EAAmB,EACnBC,EACAC,EAAc,EACdC,GAAkB,EAClBC,EAAQ,EACRC,GAAe,EACnB,SAASC,IAAc,CACrBJ,GACF,CACA,SAASK,IAAY,CACnB,GAAIL,EAAc,EAAG,CACnBA,IACA,MACF,CACA,IAAIM,EACAC,EAAY,GAChB,KAAOR,GAAiB,CACtB,IAAIS,EAAUT,EAAgB,KAAKP,EAAU,EACzCiB,EAAM,EACNC,EAAMF,EAAQ,OAGlB,IAFAT,EAAkBd,EAClBgB,KACOQ,EAAMC,EAAKD,IAAO,CACvB,IAAIE,EAAUH,EAAQC,CAAG,EAEzB,GADAE,EAAQ,GAAK,CAACxB,EACV,EAAEwB,EAAQ,EAAItB,KAAauB,GAAeD,CAAO,EACnD,GAAI,CACFA,EAAQ,EAAE,CACZ,OAASE,EAAK,CACPN,IACHD,EAAQO,EACRN,EAAY,GAEhB,CAEJ,CACF,CAGA,GAFAN,GAAkB,EAClBD,IACIO,EACF,MAAMD,CAEV,CACA,SAASM,GAAeE,EAAQ,CAC9B,IAAIC,EAAUD,EAAO,EACjBJ,EAAMK,EAAQ,OACdN,EAAM,EACNO,EACJ,KAAOP,EAAMC,EAAKD,IAEhB,GADAO,EAASD,EAAQN,CAAG,EAChBO,EAAO,EAAIF,EAAO,GAAKE,EAAO,EAAE,EAClC,MAAO,GAGX,MAAO,EACT,CACA,SAASC,IAAkB,CACzB,IAAIF,EAAUnB,EAAa,EAC3B,GAAIC,EAAc,CAEhB,GADAqB,GAAsB,EAClBpB,EAAmB,EAAG,CACxB,IAAIqB,EAAItB,EAAa,OACjBuB,EAAI,EAER,IADAL,EAAQ,OAASjB,EAAmBqB,EAC7BC,EAAID,EAAGC,IACZL,EAAQjB,EAAmBsB,CAAC,EAAIvB,EAAauB,CAAC,CAElD,MACEL,EAAUnB,EAAa,EAAIC,EAE7B,IAAIa,EAAMK,EAAQ,OACdN,EAAMX,EACV,KAAOW,EAAMC,EAAKD,IAAO,CACvB,IAAIO,EAASD,EAAQN,CAAG,EACpBb,EAAa,EAAIL,GACnByB,EAAO,EAAEpB,CAAY,CAEzB,CACF,MAAWE,EAAmBF,EAAa,EAAE,SAC3CsB,GAAsB,EACtBH,EAAQ,OAASjB,EAErB,CACA,SAASoB,IAAwB,CAC/B,IAAIH,EAAUnB,EAAa,EACvBc,EAAMK,EAAQ,OACdN,EAAMX,EACV,KAAOW,EAAMC,EAAKD,IACHM,EAAQN,CAAG,EACjB,EAAEb,CAAY,CAEzB,CACA,SAASyB,GAAeV,EAAS,CAC/B,IAAII,EAAUJ,EAAQ,EAClBD,EAAMK,EAAQ,OACdN,EAAM,EACV,KAAOA,EAAMC,EAAKD,IAChBM,EAAQN,CAAG,EAAE,EAAEE,CAAO,EAExBI,EAAQ,OAAS,CACnB,CACA,IAAMO,EAAN,KAAa,CAEX,EAAI,GAEJ,EAAI,GAEJ,EAAI,CAAC,EAEL,EAIA,YAAYC,EAAO,CACjB,IAAIC,EAAQ,KACZA,EAAM,EAAID,CACZ,CAKA,GAAI,CACF,MAAO,EACT,CAKA,EAAET,EAAQ,CACI,KACN,EAAE,KAAKA,CAAM,CACrB,CAKA,EAAEA,EAAQ,CAER,IAAIW,EADQ,KACQ,EAChBhB,EAAMgB,EAAQ,QAAQX,CAAM,EAChCW,EAAQ,OAAOhB,EAAK,CAAC,CACvB,CAIA,MAAO,CAEL,OADY,KACC,CACf,CAEA,IAAI,OAAQ,CACV,IAAIe,EAAQ,KACZ,OAAI5B,GAAgBA,EAAa,IAAM4B,EAAM,IAC3CA,EAAM,EAAI5B,EAAa,EAClBC,EAOHA,EAAa,KAAK2B,CAAK,EANnB5B,EAAa,EAAEE,CAAgB,IAAM0B,EACvC1B,IAEAD,EAAe,CAAC2B,CAAK,GAMpBA,EAAM,CACf,CACA,IAAI,MAAME,EAAM,CACd,IAAIF,EAAQ,KACZ,GAAIA,EAAM,IAAME,IACdF,EAAM,EAAIE,EACVF,EAAM,EAAI,EAAEtB,EACRD,GAAkB,KAAK,CACzB,IAAIwB,EAAUD,EAAM,EAChBd,EAAMe,EAAQ,OACdhB,EAAM,EAEV,IADAL,GAAY,EACLK,EAAMC,EAAKD,IAChBgB,EAAQhB,CAAG,EAAE,EAAE,EAEjBJ,GAAU,CACZ,CAEJ,CACF,EACMsB,EAAN,cAAuBL,CAAO,CAE5B,EAAI,CAAC,EAEL,EAAIlC,EAEJ,EAAI,GAEJ,EAIA,YAAYwC,EAAS,CACnB,MAAM,EACN,IAAIJ,EAAQ,KACZA,EAAM,EAAII,CACZ,CAKA,GAAI,CACF,IAAIJ,EAAQ,KACRK,EAAQL,EAAM,GAAK,CAACrC,EACxB,GAAI0C,EAAQ3C,IAAY2C,EAAQtC,EAAW,EAAEsC,EAAQzC,GAAYoC,EAAM,IAAMtB,GAC3E,MAAO,GAIT,GAFAsB,EAAM,EAAIK,EAAQ,CAACzC,EAAWF,EAC9BsC,EAAM,EAAItB,EACNsB,EAAM,EAAI,IAAM,CAACZ,GAAeY,CAAK,EACvC,OAAAA,EAAM,GAAK,CAACtC,EACL,GAET,IAAI4C,EAAQ,GACRC,EAAenC,EACfoC,EAAenC,EACfoC,EAAmBnC,EACnByB,EACJ,GAAI,CACF3B,EAAe4B,EACf3B,EAAeZ,EACfa,EAAmB,EACnByB,EAAQC,EAAM,EAAE,GACZK,EAAQvC,GAAakC,EAAM,IAAMD,GAASC,EAAM,IAAM,MACxDM,EAAQ,GACRN,EAAM,EAAID,EACVC,EAAM,GAAK,CAAClC,EACZkC,EAAM,EAAI,EAAEtB,EAEhB,OAASW,EAAK,CACZiB,EAAQ,GACRN,EAAM,EAAIX,EACVW,EAAM,GAAKlC,EACXkC,EAAM,EAAI,EAAEtB,CACd,CACA,OAAAe,GAAgB,EAChBrB,EAAemC,EACflC,EAAemC,EACflC,EAAmBmC,EACnBT,EAAM,GAAK,CAACtC,EACL4C,CACT,CAKA,EAAEhB,EAAQ,CACR,IAAIU,EAAQ,KACZ,GAAIA,EAAM,EAAE,OAAS,EAAG,CACtB,IAAIT,EAAUS,EAAM,EAChBd,EAAMK,EAAQ,OACdN,EAAM,EAEV,IADAe,EAAM,GAAKjC,EACJkB,EAAMC,EAAKD,IAChBM,EAAQN,CAAG,EAAE,EAAEe,CAAK,CAExB,CACA,MAAM,EAAEV,CAAM,CAChB,CAKA,EAAEA,EAAQ,CACR,IAAIU,EAAQ,KAEZ,GADA,MAAM,EAAEV,CAAM,EACVU,EAAM,EAAE,OAAS,EAAG,CACtB,IAAIT,EAAUS,EAAM,EAChBd,EAAMK,EAAQ,OACdN,EAAM,EAEV,IADAe,EAAM,GAAK,CAACjC,EACLkB,EAAMC,EAAKD,IAChBM,EAAQN,CAAG,EAAE,EAAEe,CAAK,CAExB,CACF,CAIA,GAAI,CACF,IAAIA,EAAQ,KACZ,GAAI,EAAEA,EAAM,GAAKrC,EAAWD,IAAW,CACrC,IAAIuC,EAAUD,EAAM,EAChBd,EAAMe,EAAQ,OACdhB,EAAM,EAEV,IADAe,EAAM,GAAKpC,EAAWD,EACfsB,EAAMC,EAAKD,IAChBgB,EAAQhB,CAAG,EAAE,EAAE,CAEnB,CACF,CACA,MAAO,CACL,IAAIe,EAAQ,KAEZ,GADAA,EAAM,EAAE,EACJA,EAAM,EAAIlC,EACZ,MAAMkC,EAAM,EAEd,OAAOA,EAAM,CACf,CACA,IAAI,OAAQ,CACV,IAAIA,EAAQ,KAEZ,GADAA,EAAM,EAAE,EACJA,EAAM,EAAIlC,EACZ,MAAM,MAAM,MAEd,OAAO,MAAM,KACf,CACA,IAAI,MAAMoC,EAAM,CACd,MAAM,MAAQA,CAChB,CACF,EACMQ,EAAN,KAAa,CAEX,EAAI,EAEJ,EAAI,EAEJ,EAAI,CAAC,EAEL,EAAI3C,EAEJ,EAAI,EAEJ,EAIA,YAAYqC,EAAS,CACnB,IAAIJ,EAAQ,KACZA,EAAM,EAAII,CACZ,CAIA,GAAI,CACF,IAAIJ,EAAQ,KACRK,EAAQL,EAAM,EAClB,GAAIK,EAAQ3C,EACV,OAEFsC,EAAM,EAAItB,EACVsB,EAAM,EAAIrB,KACVqB,EAAM,EAAIK,EAAQ,CAACzC,EAAWF,EAC9B,IAAI6C,EAAenC,EACfoC,EAAenC,EACfoC,EAAmBnC,EACvB,GAAI,CACFM,GAAY,EACZR,EAAe4B,EACf3B,EAAeZ,EACfa,EAAmB,EACnB0B,EAAM,EAAE,CACV,QAAE,CACAP,GAAgB,EAChBrB,EAAemC,EACflC,EAAemC,EACflC,EAAmBmC,EACnBT,EAAM,GAAK,CAACtC,EACRsC,EAAM,EAAInC,IACZgC,GAAeG,CAAK,EAEtBnB,GAAU,CACZ,CACF,CAIA,GAAI,CACF,IAAImB,EAAQ,KACNA,EAAM,GAAKrC,EAAWD,KAC1BsC,EAAM,GAAKpC,EAAWD,GACrBY,IAAoB,CAAC,GAAG,KAAKyB,CAAK,EAEvC,CAIA,GAAI,CACF,IAAIA,EAAQ,KACZA,EAAM,GAAKnC,GACLmC,EAAM,EAAItC,GACdmC,GAAeG,CAAK,CAExB,CACF,EACMW,EAAN,KAAY,CAIV,YAAYC,EAAU,CACpB,IAAIZ,EAAQ,KACZA,EAAM,OAAS,CAAC,EAChBA,EAAM,SAAW,CAAC,EAClBA,EAAM,OAASvC,EACfuC,EAAM,EAAI,EACN,CAACY,GAAYzC,IACf6B,EAAM,OAAS7B,EACf6B,EAAM,EAAI7B,EAAW,EAAI,EACzBA,EAAW,OAAO,KAAK6B,CAAK,EAEhC,CAMA,IAAIa,EAAU,CACZ,IAAIC,EAAa3C,EACjB,GAAI,CACF,OAAAA,EAAa,KACN0C,EAAS,CAClB,QAAE,CACA1C,EAAa2C,CACf,CACF,CACA,OAAQ,CACN,IAAId,EAAQ,KACRe,EAASf,EAAM,OACfgB,EAAWhB,EAAM,SACrB,QAASiB,KAAUF,EACjBE,EAAO,MAAM,EACbA,EAAO,OAASxD,EAElB,QAASyD,KAAYF,EACnBE,EAAS,EAEXH,EAAO,OAAS,EAChBC,EAAS,OAAS,CACpB,CACF,EACA,SAASG,EAAMP,EAAU,CACvB,OAAO,IAAID,EAAMC,CAAQ,CAC3B,CACA,SAASQ,GAAQP,EAAU,CACrBQ,GAAYR,CAAQ,GAAK1C,GAC3BA,EAAW,SAAS,KAAK0C,CAAQ,CAErC,CA2BA,SAASS,EAAOC,EAAO,CACrB,OAAO,IAAIC,EAAOD,CAAK,CACzB,CACA,SAASE,EAASC,EAAS,CACzB,OAAO,IAAIC,EAASD,CAAO,CAC7B,CACA,SAASE,EAAOF,EAAS,CACvB,IAAIG,EAAU,IAAIC,EAAOJ,CAAO,EAC5BK,EAAUF,EAAQ,EAAE,KAAKA,CAAO,EACpC,GAAI,CACFA,EAAQ,EAAE,CACZ,OAASG,EAAO,CACd,MAAAD,EAAQ,EACFC,CACR,CACA,OAAIC,GAAcJ,EAAQ,EAAE,OAAS,IACnCA,EAAQ,EAAII,EAAW,EACvBA,EAAW,SAAS,KAAKF,CAAO,GAE3BA,CACT,CACA,IAAIG,GAAqB,GACrBC,GAAa,EAIjB,IAAIC,EAAY,KACZC,GAAgBC,GAAQ,EACtBC,EAAN,cAA8B,WAAY,CAMxC,GAAK,GAEL,GAAKC,EAAM,EAAI,EAEf,GAAK,CAAC,EAEN,GAAK,CAAC,EACN,aAAc,CACZ,MAAM,EACN,IAAIC,EAAO,KACPC,EAAQD,EAAK,GACbE,EAAaF,EAAK,YAAY,GAClC,QAASG,KAASD,EAAY,CAC5B,IAAIE,EAAQF,EAAWC,CAAK,EAC5BF,EAAMG,CAAK,EAAIC,EAAOT,EAAa,CACrC,CACF,CACA,mBAAoB,CAClB,IAAII,EAAO,KACX,GAAI,CAACA,EAAK,GAAI,CACZA,EAAK,GAAK,GACV,IAAIM,EAAQN,EAAK,YAAY,GACzBO,EAASP,EAAK,YAAY,GAC1BQ,EAAWR,EAAK,GAChBS,EAAQT,EAAK,GACbU,EAAOV,EAAK,WACXU,IACHA,EAAOV,EAAK,aAAa,CAAE,KAAM,MAAO,CAAC,EACzCU,EAAK,mBAAqBH,GAE5B,IAAII,EAAYhB,EAChB,GAAI,CACFA,EAAYK,EACZQ,EAAS,IAAI,IAAMF,EAAMI,EAAMV,CAAI,CAAC,EACpC,QAASY,EAAM,EAAGC,EAAMJ,EAAM,OAAQG,EAAMC,EAAKD,IAAO,CACtD,IAAIE,EAAOL,EAAMG,CAAG,EAChBG,EAAMD,EAAK,EACXE,GAAYD,CAAG,GACjBP,EAAS,SAAS,KAAKO,CAAG,CAE9B,CACAN,EAAM,OAAS,CACjB,QAAE,CACAd,EAAYgB,CACd,CACF,CACF,CACA,sBAAuB,CACrB,IAAIX,EAAO,KACPA,EAAK,KACPA,EAAK,GAAG,MAAM,EACdA,EAAK,WAAW,UAAY,GAC5BA,EAAK,GAAK,GAEd,CACA,yBAAyBiB,EAAOC,EAAMC,EAAM,CAC1C,IAAInB,EAAO,KACPoB,EAAUpB,EAAK,YAAY,GAC3BiB,KAASG,IACXpB,EAAK,GAAGoB,EAAQH,CAAK,CAAC,EAAE,MAAQE,IAAS,GAAK,GAAOA,EAEzD,CACF,EACA,SAASE,GAAOC,EAAKhB,EAAOJ,EAAYK,EAAQ,CAC9C,IAAIgB,EAAiB,CAAC,EAClBC,EAAeC,GAAQ,OAAO,IAAI,EACtC,MAAMC,UAAkB5B,CAAgB,CACtC,OAAO,mBAAqByB,EAC5B,OAAO,GAAKjB,EACZ,OAAO,GAAKkB,EACZ,OAAO,GAAKtB,EACZ,OAAO,GAAKK,CACd,CACA,QAASJ,KAASD,EAAY,CAC5B,IAAIE,EAAQF,EAAWC,CAAK,EACxBwB,EAASC,GAAUzB,CAAK,EAC5BqB,EAAaG,CAAM,EAAIxB,EACvBoB,EAAe,KAAKI,CAAM,EAC1BF,GAAQ,eAAeC,EAAU,UAAWvB,EAAO,CAEjD,KAAM,CACJ,OAAO,KAAK,GAAGC,CAAK,EAAE,CACxB,EAEA,IAAIe,EAAM,CACR,KAAK,GAAGf,CAAK,EAAE,MAAQe,CACzB,CACF,CAAC,CACH,CACA,OAAIU,KACFP,EAAM,UAAYQ,MAEhBR,GACF,eAAe,OAAOA,EAAKI,CAAS,EAE/BA,CACT,CAiDA,SAASK,EAAKC,EAAUC,EAAY,CAClC,IAAIC,EAAO,SAAS,cAAc,UAAU,EAE5C,GADAA,EAAK,UAAYF,EACbC,EAAY,CACd,IAAIE,EAAUD,EAAK,QACfE,EAAUD,EAAQ,WAClBE,EAEJ,IADAD,EAAQ,OAAO,EACRC,EAAQD,EAAQ,YACrBD,EAAQ,YAAYE,CAAK,CAE7B,CACA,OAAOH,CACT,CAIA,SAASI,EAAMC,EAAU,CAEvB,OADe,SAAS,WAAWA,EAAS,QAAS,EAAI,CAE3D,CAEA,SAASC,EAAYC,EAAM,CACzB,OAAOA,EAAK,UACd,CAEA,SAASC,EAAaD,EAAM,CAC1B,OAAOA,EAAK,WACd,CAgBA,SAASE,EAAQC,EAAKC,EAAMC,EAAO,CAEjC,GADAF,EAAI,YAAYC,CAAI,EAChBC,EAAO,CACT,IAAIC,EACJ,KAAOA,EAAQH,EAAI,YACjBC,EAAK,YAAYE,CAAK,CAE1B,CACF,CACA,SAASC,EAAOJ,EAAKC,EAAM,CACzBD,EAAI,OAAOC,CAAI,CACjB,CACA,SAASI,EAAML,EAAKC,EAAM,CACxBD,EAAI,MAAMC,CAAI,CAChB,CACA,SAASK,GAAaC,EAAGC,EAAG,CAC1B,IAAIP,EAAOM,EACX,GAAIC,EAAE,cAAgBD,EAGtB,KAAON,GAAM,CACX,IAAIQ,EAAOR,EAGX,GAFAA,EAAOA,EAAK,YACZQ,EAAK,OAAO,EACRA,IAASD,EACX,KAEJ,CACF,CACA,SAASE,EAAGT,EAAMU,EAAMC,EAAUC,EAAS,CACzCZ,EAAK,iBAAiBU,EAAMC,EAAUC,CAAO,CAC/C,CAiBA,SAASC,EAAaC,EAAMC,EAAMC,EAAO,CACvCF,EAAK,UAAU,OAAOC,EAAMC,CAAK,CACnC,CCnrBA,SAASC,EAAKC,EAAQC,EAAYC,EAAQ,CACxC,IAAIC,EAAO,SAAS,eAAe,EAAE,EACrCD,EAAOF,EAAQG,CAAI,EACnBC,EAAO,IAAMD,EAAK,KAAOF,EAAW,CAAC,CACvC,CACA,SAASI,GAAKL,EAAQC,EAAY,CAChC,IAAIK,EAAWC,EAAM,EACjBC,EACAC,EACJL,EAAO,IAAM,CACX,IAAIM,EAAQT,EAAW,EACnBS,IAAUF,IAGVC,IACFH,EAAS,MAAM,EACfK,GAAcX,EAAQS,CAAG,EACzBA,EAAM,MAERD,EAAUE,EACLA,IAGLD,EAAMH,EAAS,IAAI,IAAMI,EAAMV,CAAM,CAAC,GACxC,CAAC,CACH,CACA,SAASY,GAAKZ,EAAQU,EAAOT,EAAYY,EAAgB,CACvD,IAAIC,EAAQ,CAAC,EACTC,EAAQC,EAAW,EAAI,EACvBC,EAAgB,KACpBb,EAAO,IAAM,CACX,IAAIc,EAAQjB,EAAW,EACnBkB,EAAQ,EACRC,EAAYF,EAAM,OAClBG,EAAYP,EAAM,OACtB,GAAID,GAAkBI,GAAiBG,EAAY,EAAG,CACpD,IAAId,EAAWW,EAAc,CAAC,EAC1BR,EAAMQ,EAAc,CAAC,EACzBX,EAAS,MAAM,EACfK,GAAcX,EAAQS,CAAG,EACzBQ,EAAgB,IAClB,CACA,KAAOE,EAAQC,EAAWD,IACxB,GAAIL,EAAMK,CAAK,EAAG,CAChB,IAAIG,EAAOR,EAAMK,CAAK,EAAE,CAAC,EACzBG,EAAK,MAAQJ,EAAMC,CAAK,CAC1B,KAAO,CACL,IAAII,EAAOT,EAAMK,EAAQ,CAAC,EACtBK,EAAQD,EAAOA,EAAK,CAAC,EAAIvB,EACzBsB,EAAOG,EAAOP,EAAMC,CAAK,CAAC,EAC1Bb,EAAWC,EAAM,EAAI,EACzBD,EAAS,EAAIS,EACbD,EAAMK,CAAK,EAAI,CAACb,EAAUA,EAAS,IAAI,IAAMI,EAAMc,EAAOF,EAAMH,CAAK,CAAC,EAAGG,CAAI,CAC/E,CAEF,GAAID,EAAYD,EAAW,CACzB,IAAIG,EAAOT,EAAMK,EAAQ,CAAC,EACtBK,EAAQD,EAAOA,EAAK,CAAC,EAAIvB,EACzBS,EAAMK,EAAMO,EAAY,CAAC,EAAE,CAAC,EAChC,KAAOF,EAAQE,EAAWF,IACxBL,EAAMK,CAAK,EAAE,CAAC,EAAE,MAAM,EAExBR,GAAca,EAAOf,CAAG,EACxBK,EAAM,OAASM,CACjB,CACA,GAAIP,GAAkB,CAACI,GAAiBG,EAAY,EAAG,CACrD,IAAId,EAAWC,EAAM,EAAI,EACzBD,EAAS,EAAIS,EACbE,EAAgB,CAACX,EAAUA,EAAS,IAAI,IAAMO,EAAeb,CAAM,CAAC,CAAC,CACvE,CACF,CAAC,EACD0B,GAAQ,IAAM,CACZ,QAASC,EAAK,EAAGC,EAAId,EAAM,OAAQa,EAAKC,EAAGD,IAC9Bb,EAAMa,CAAE,EACC,CAAC,EACZ,MAAM,CAEnB,CAAC,CACH,CA6KA,SAASE,GAAcC,EAAQC,EAAK,CAClCC,GAAaF,EAAO,YAAaC,CAAG,CACtC,CCrTA,IAAIE,GAA0BC,EAAK,kHAAkH,EACjJC,GAA0BD,EAAK,0XAA0X,EACzZE,GAA0BF,EAAK,mIAAmI,EAClKG,GAA0BH,EAAK,oBAAoB,EACnDI,GAA0BJ,EAAK,wDAAwD,EAE3F,SAASK,GAAMC,EAAQC,EAAQ,CAG9B,IAAMC,EAAc,QAEdC,EAAU,CACf,IAAKC,GAASA,EACd,OAAQA,GAASA,EAAM,OAAOC,GAAQ,CAACA,EAAK,SAAS,EACrD,UAAWD,GAASA,EAAM,OAAOC,GAAQA,EAAK,SAAS,CACxD,EAEID,EAAQE,EAAO,KAAK,MAAM,aAAa,QAAQJ,CAAW,GAAK,IAAI,CAAC,EACpEK,EAAaD,EAAO,KAAK,EACzBE,EAAUF,EAAO,IAAI,EACrBG,EAAcH,EAAO,IAAI,EACzBI,EAAiBC,EAAS,IAAMR,EAAQI,EAAW,KAAK,EAAEH,EAAM,KAAK,CAAC,EACtEQ,EAAYD,EAAS,IAAMR,EAAQ,OAAOC,EAAM,KAAK,EAAE,MAAM,EAE3DS,EAAaC,GAAS,CAC3BV,EAAM,MAAQA,EAAM,MAAM,IAAIC,IAAS,CAAE,GAAGA,EAAM,UAAWS,EAAM,OAAO,OAAQ,EAAE,CACrF,EAEMC,EAAkB,IAAM,CAC7BX,EAAM,MAAQA,EAAM,MAAM,OAAOC,GAAQ,CAACA,EAAK,SAAS,CACzD,EAEMW,EAAWF,GAAS,CACrBA,EAAM,QAAU,KACnBV,EAAM,MAAQA,EAAM,MAAM,OAAO,CAChC,GAAI,KAAK,IAAI,EACb,MAAOU,EAAM,OAAO,MACpB,UAAW,EACZ,CAAC,EAEDA,EAAM,OAAO,MAAQ,GAEvB,EAEMG,GAAcC,GAAM,CACzBd,EAAM,MAAQA,EAAM,MAAM,OAAOC,GAAQA,EAAK,KAAOa,CAAE,CACxD,EAEMC,GAAYC,GAAQ,CACzBhB,EAAM,MAAQA,EAAM,MAAM,IAAIC,GACzBA,EAAK,KAAOe,EAAK,GAAWf,EACzB,CAAE,GAAGA,EAAM,GAAGe,CAAK,CAC1B,CACF,EAEMC,GAAc,CAACH,EAAIJ,IAAU,CAClCK,GAAU,CAAE,GAAAD,EAAI,UAAWJ,EAAM,OAAO,OAAQ,CAAC,CAClD,EAEMQ,GAAcR,GAAS,CACxBA,EAAM,QAAU,GACnBA,EAAM,OAAO,KAAK,EACRA,EAAM,QAAU,KAC1BN,EAAQ,MAAQ,KAChBC,EAAY,MAAQ,KAEtB,EAEMc,GAAgBT,GAAS,CAC9BK,GAAU,CACT,GAAIX,EAAQ,MACZ,MAAOM,EAAM,OAAO,KACrB,CAAC,EAEDN,EAAQ,MAAQ,KAChBC,EAAY,MAAQ,IACrB,EAEMe,GAAc,IAAM,CACzB,IAAIC,EAAQ,OAAO,SAAS,KAAK,QAAQ,OAAQ,EAAE,EAE9CtB,EAAQsB,CAAK,IACjBA,EAAQ,OAGTlB,EAAW,MAAQkB,CACpB,EAEA,OAAO,iBAAiB,aAAcD,EAAW,EACjDA,GAAY,EACZE,EAAO,IAAM,aAAa,QAAQxB,EAAa,KAAK,UAAUE,EAAM,KAAK,CAAC,CAAC,EAE3EsB,EAAO,IAAM,CACRjB,EAAY,OAAO,WAAW,IAAMA,EAAY,MAAM,MAAM,CAAC,CAClE,CAAC,EAED,IAAIkB,GAA0BC,EAAMnC,EAAS,EACzCoC,GAAuBC,EAAYH,EAAS,EAC5CI,GAAuBD,EAAYD,EAAM,EACzCG,GAAuBF,EAAYC,EAAM,EACzCE,GAAuBC,EAAaH,EAAM,EAE1CI,GAASnC,GAAU,CACtB,IAAIoC,EAA0BR,EAAMjC,EAAS,EACzC0C,GAAuBP,EAAYM,CAAS,EAC5CE,GAAuBR,EAAYO,EAAM,EACzCE,GAAuBL,EAAaI,EAAM,EAC1CE,GAAuBV,EAAYS,EAAM,EACzCE,GAAuBP,EAAaK,EAAM,EAC1CG,GAAwBZ,EAAYW,EAAM,EAE1CE,GAAwBb,EADAI,EAAaO,EAAM,CACA,EAE3CG,GAAwBV,EADAJ,EAAYa,EAAO,CACC,EAE5CE,GAAwBX,EADAA,EAAaU,EAAO,CACA,EAC5CE,GAAwBZ,EAAaW,EAAO,EAC5CE,GAAwBb,EAAaS,EAAO,EAC5CK,GAAwBlB,EAAYiB,EAAO,EAC3CE,GAAwBnB,EAAYkB,EAAO,EAC3CE,GAAwBpB,EAAYmB,EAAO,EAC3CE,GAAwBjB,EAAac,EAAO,EAC5CI,GAAwBtB,EAAYqB,EAAO,EAC3CE,GAAwBvB,EAAYsB,EAAO,EAE3CE,GAAwBxB,EADAI,EAAaiB,EAAO,CACD,EAC3CI,GAAwBzB,EAAYwB,EAAO,EAE3CE,GAAS,CAACxD,GAAQK,IAAS,CAC9B,IAAIoD,EAA0B7B,EAAMhC,EAAS,EACzC8D,EAAuB5B,EAAY2B,CAAS,EAC5CE,GAAwB7B,EAAY4B,CAAM,EAC1CE,GAAwB9B,EAAY6B,EAAO,EAC3CE,GAAwB3B,EAAa0B,EAAO,EAC5CE,GAAwBhC,EAAY+B,EAAO,EAC3CE,GAAwB7B,EAAa2B,EAAO,EAE5CG,GAAwB9B,EADAA,EAAayB,EAAO,CACA,EAE5CM,GAASjE,IAAU,CACtB,IAAIkE,GAA0BtC,EAAM/B,EAAS,EACzCsE,EAAwBrC,EAAYoC,EAAS,EACjD,OAAAzD,EAAY,MAAQ0D,EACpBzC,EAAO,IAAMyC,EAAQ,MAAW9D,EAAK,MAAM,KAAK,EAChD+D,EAAGD,EAAS,UAAW7C,EAAW,EAClC8C,EAAGD,EAAS,OAAQ5C,EAAa,EACjC8C,EAAMrE,GAAQkE,EAAS,EAChBC,CACR,EAEA,OAAAzC,EAAO,IAAM4C,EAAaZ,EAAQ,YAAarD,EAAK,MAAM,SAAS,CAAC,EACpEqB,EAAO,IAAM4C,EAAaZ,EAAQ,UAAWlD,EAAQ,QAAUH,EAAK,MAAM,EAAE,CAAC,EAC7EqB,EAAO,IAAMkC,GAAQ,QAAavD,EAAK,MAAM,SAAS,EACtD+D,EAAGR,GAAS,SAAU9C,IAASO,GAAYhB,EAAK,MAAM,GAAIS,EAAK,CAAC,EAChEsD,EAAGP,GAAS,WAAY,IAAMrD,EAAQ,MAAQH,EAAK,MAAM,EAAE,EAC3DkE,EAAKT,GAAS,IAAMzD,EAAK,MAAM,MAAOmE,CAAO,EAC7CJ,EAAGL,GAAS,QAAS,IAAM9C,GAAYZ,EAAK,MAAM,EAAE,CAAC,EACrDoE,GAAKT,GAAS,IAAMxD,EAAQ,QAAUH,EAAK,MAAM,GAAK4D,GAAS,IAAI,EACnEI,EAAMrE,GAAQyD,CAAS,EAChBC,CACR,EAEIgB,GAAS1E,IAAU,CACtB,IAAI2E,EAA0B/C,EAAM9B,EAAS,EACzC8E,EAAwB9C,EAAY6C,CAAS,EAC7CE,EAAwB/C,EAAY8C,CAAO,EAC/C,OAAAR,EAAGQ,EAAS,QAAS7D,CAAe,EACpCsD,EAAMrE,GAAQ2E,CAAS,EAChBC,CACR,EAEA,OAAAlD,EAAO,IAAMY,GAAO,QAAa1B,EAAU,QAAU,CAAC,EACtDwD,EAAG9B,GAAQ,SAAUzB,CAAU,EAC/BiE,GAAKpC,GAASc,GAAQ,IAAM9C,EAAe,KAAK,EAChD6D,EAAK3B,GAAS,IAAMhC,EAAU,MAAOmE,CAAM,EAC3CR,EAAK1B,GAAS,IAAMjC,EAAU,QAAU,EAAI,OAAS,QAAS4D,CAAO,EACrE9C,EAAO,IAAM4C,EAAarB,GAAS,WAAY1C,EAAW,QAAU,KAAK,CAAC,EAC1EmB,EAAO,IAAM4C,EAAalB,GAAS,WAAY7C,EAAW,QAAU,QAAQ,CAAC,EAC7EmB,EAAO,IAAM4C,EAAahB,GAAS,WAAY/C,EAAW,QAAU,WAAW,CAAC,EAChFkE,GAAK1B,GAAS,IAAM3C,EAAM,MAAM,OAASQ,EAAU,MAAQ8D,GAAS,IAAI,EACxEL,EAAMrE,EAAQoC,CAAS,EAChBC,EACR,EAEA+B,EAAGnC,GAAQ,UAAWjB,CAAQ,EAC9ByD,GAAK5C,GAAQ,IAAMzB,EAAM,MAAM,OAAS,EAAI+B,GAAS,IAAI,EACzD4C,EAAO/E,EAAQ2B,EAAS,CACzB,CAEA,IAAOqD,GAAQC,GAAO,QAASlF,GAAO,CAAC,EAAG,CAAC,CAAC,ECzM5CmF,GAAI,UAAU,aAAe,UAAY,CACxC,OAAO,IACR,EAEA,IAAMC,GAAM,IAAID,GAChB,SAAS,KAAK,OAAOC,EAAG",
  "names": ["_Object", "_Symbol", "RE_HYPHENATE", "hyphenate", "str", "RE_HYPHENATE", "is_function", "x", "undefined$1", "RUNNING", "NOTIFIED", "OUTDATED", "DISPOSED", "HAS_ERROR", "TRACKING", "depth_sort", "a", "b", "eval_scope", "eval_context", "eval_sources", "eval_sources_idx", "batched_effects", "batch_depth", "batch_iteration", "clock", "access_clock", "start_batch", "end_batch", "error", "has_error", "effects", "idx", "len", "effect2", "need_recompute", "err", "target", "sources", "source", "cleanup_context", "prune_context_sources", "l", "i", "dispose_effect", "Signal", "value", "_this", "targets", "next", "Computed", "compute", "flags", "stale", "prev_context", "prev_sources", "prev_sources_idx", "Effect", "Scope", "detached", "callback", "prev_scope", "scopes", "cleanups", "scope2", "cleanup2", "scope", "cleanup", "is_function", "signal", "value", "Signal", "computed", "compute", "Computed", "effect", "effect2", "Effect", "dispose", "error", "eval_scope", "ENABLE_RANDOM_TAGS", "RANDOM_TAG", "curr_host", "default_value", "_Symbol", "VelvetComponent", "scope", "host", "props", "definition", "prop2", "index", "signal", "setup", "styles", "instance", "hooks", "root", "prev_host", "idx", "len", "hook", "ret", "is_function", "attr2", "prev", "next", "mapping", "define", "tag", "observed_attrs", "attr_to_prop", "_Object", "Component", "hyphen", "hyphenate", "ENABLE_RANDOM_TAGS", "RANDOM_TAG", "html", "fragment", "is_wrapped", "node", "content", "wrapper", "child", "clone", "template", "first_child", "node", "next_sibling", "replace", "ref", "node", "adopt", "child", "append", "after", "remove_parts", "a", "b", "curr", "on", "type", "listener", "options", "class_toggle", "node", "name", "value", "text", "marker", "expression", "insert", "node", "effect", "show", "instance", "scope", "current", "end", "block", "destroy_block", "each", "fallback_block", "parts", "depth", "eval_scope", "fallback_part", "items", "index", "items_len", "parts_len", "item", "prev", "start", "signal", "cleanup", "i2", "l", "destroy_block", "marker", "end", "remove_parts", "template0", "html", "template1", "template2", "template3", "template4", "setup", "$$root", "$$host", "STORAGE_KEY", "filters", "items", "item", "signal", "visibility", "editing", "editing_ref", "filtered_items", "computed", "remaining", "toggle_all", "event", "clear_completed", "add_todo", "remove_todo", "id", "edit_todo", "next", "toggle_todo", "handle_edit", "handle_submit", "update_view", "route", "effect", "fragment0", "clone", "child0", "first_child", "child1", "child2", "child3", "next_sibling", "block1", "fragment1", "child4", "child5", "child6", "child7", "child8", "child18", "child20", "child22", "child24", "child25", "child26", "child27", "child28", "child29", "child30", "child31", "child32", "child34", "child35", "block2", "fragment2", "child9", "child10", "child11", "child12", "child13", "child14", "child17", "block3", "fragment3", "child16", "on", "after", "class_toggle", "text", "replace", "show", "block4", "fragment4", "child36", "child37", "each", "append", "App_default", "define", "App_default", "app"]
}
